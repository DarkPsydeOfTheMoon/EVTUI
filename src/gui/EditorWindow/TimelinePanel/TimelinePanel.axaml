<rxui:ReactiveUserControl xmlns="https://github.com/avaloniaui"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
             xmlns:c="clr-namespace:CalcBinding;assembly=CalcBindingAva"
             xmlns:rxui="http://reactiveui.net"
             mc:Ignorable="d" d:DesignWidth="800" d:DesignHeight="450"
             xmlns:vm="using:EVTUI.ViewModels"
             xmlns:cmds="using:EVTUI.ViewModels.TimelineCommands"
             xmlns:views="using:EVTUI.Views"
             x:DataType="vm:TimelinePanelViewModel"
             x:Class="EVTUI.Views.TimelinePanel"
             x:TypeArguments="vm:TimelinePanelViewModel">

  <UserControl.Styles>
    <Style Selector="Separator.formtitle">
      <Setter Property="Background" Value="{DynamicResource SystemAccentColor}"/>
      <Setter Property="Height" Value="2"/>
      <Setter Property="Margin" Value="20,5,20,15"/>
      <!--Setter Property="MaxWidth" Value="300"/-->
    </Style>
    <Style Selector="Separator.formsubtitle">
      <Setter Property="Margin" Value="40,5,40,15"/>
      <!--Setter Property="MaxWidth" Value="300"/-->
    </Style>
    <Style Selector="FlyoutPresenter">
      <Setter Property="MaxHeight" Value="700"/>
      <Setter Property="MaxWidth" Value="900"/>
    </Style>
    <Style Selector="Button.selected">
      <Setter Property="Background" Value="{DynamicResource SystemAccentColor}"/>
    </Style>
    <Style Selector="Expander">
      <Setter Property="HorizontalAlignment" Value="Stretch"/>
      <Setter Property="IsExpanded" Value="True"/>
    </Style>
    <Style Selector="Expander ToggleButton TextBlock">
      <Setter Property="FontSize" Value="20"/>
      <Setter Property="FontWeight" Value="Light"/>
    </Style>
    <!--Style Selector="Expander StackPanel">
      <Setter Property="Spacing" Value="10"/>
    </Style-->
    <Style Selector="StackPanel.preview">
      <Setter Property="HorizontalAlignment" Value="Right"/>
      <Setter Property="Orientation" Value="Horizontal"/>
      <Setter Property="Spacing" Value="5"/>
    </Style>
    <Style Selector="Button.popupclose">
      <Setter Property="HorizontalAlignment" Value="Right"/>
      <Setter Property="Margin" Value="0"/>
      <Setter Property="Width" Value="20"/>
      <Setter Property="Height" Value="20"/>                                                                                                                                                    
    </Style>
    <Style Selector="Button.popupclose > PathIcon">
      <Setter Property="Foreground" Value="{DynamicResource SystemAccentColor}"/>
      <!--Setter Property="Padding" Value="10"/-->
      <Setter Property="Width" Value="10"/>
      <Setter Property="Height" Value="10"/>                                                                                                                                                    
    </Style>
    <Style Selector="Button.popupclose:pointerover > PathIcon">
      <Setter Property="Foreground" Value="White"/>
    </Style>
    <!--Style Selector="StackPanel.preview > Button">
      <Setter Property="Margin" Value="10"/>
    </Style-->
    <Style Selector="Button.preview">
      <Setter Property="Height" Value="32"/>
      <Setter Property="HorizontalAlignment" Value="Center"/>
      <Setter Property="Margin" Value="5"/>
      <Setter Property="ToolTip.Tip" Value="Preview"/>
      <Setter Property="Width" Value="32"/>
    </Style>
    <!--Style Selector="Button.space">
      <Setter Property="Height" Value="20"/>
      <Setter Property="HorizontalAlignment" Value="Center"/>
      <Setter Property="Opacity" Value="0"/>
      <Setter Property="ToolTip.Tip" Value="Add new node"/>
      <Setter Property="Width" Value="60"/>
    </Style>
    <Style Selector="Button.space:pointerover">
      <Setter Property="Height" Value="60"/>
      <Setter Property="Opacity" Value="1"/>
    </Style>
    <Style Selector="Button.space:nth-last-child(1)">
      <Setter Property="Height" Value="60"/>
      <Setter Property="Margin" Value="0 20"/>
      <Setter Property="Opacity" Value="0.33"/>
    </Style>
    <Style Selector="Button.space:nth-last-child(1):pointerover">
      <Setter Property="Opacity" Value="1"/>
    </Style>
    <Style Selector="Button.space > PathIcon">
      <Setter Property="Data" Value="{StaticResource add_square_regular}"/>
      <Setter Property="Foreground" Value="{DynamicResource SystemAccentColor}"></Setter>
      <Setter Property="HorizontalAlignment" Value="Center"/>
      <Setter Property="IsVisible" Value="False"/>
      <Setter Property="VerticalAlignment" Value="Center"/>
    </Style>
    <Style Selector="Button.space:pointerover > PathIcon">
      <Setter Property="IsVisible" Value="True"/>
    </Style>
    <Style Selector="Button.space:nth-last-child(1) > PathIcon">
      <Setter Property="IsVisible" Value="True"/>
    </Style-->
    <Style Selector="StackPanel.form">
      <Setter Property="Orientation" Value="Vertical"/>
      <Setter Property="Margin" Value="5"/>
      <Setter Property="Spacing" Value="10"/>
    </Style>
    <Style Selector="TextBlock.formtitle">
      <Setter Property="FontSize" Value="24"/>
      <Setter Property="FontWeight" Value="Normal"/>
      <Setter Property="HorizontalAlignment" Value="Center"/>
    </Style>
    <Style Selector="TextBlock.formsubtitle">
      <Setter Property="FontSize" Value="20"/>
      <Setter Property="FontWeight" Value="Light"/>
      <Setter Property="HorizontalAlignment" Value="Center"/>
      <Setter Property="Margin" Value="0,20,0,0"/>
    </Style>
    <Style Selector="StackPanel.field">
      <Setter Property="HorizontalAlignment" Value="Right"/>
      <Setter Property="Orientation" Value="Horizontal"/>
      <Setter Property="Spacing" Value="20"/>
      <Setter Property="VerticalAlignment" Value="Center"/>
    </Style>
    <Style Selector="TextBlock.fieldtitle">
      <Setter Property="FontSize" Value="16"/>
      <Setter Property="FontWeight" Value="ExtraLight"/>
      <Setter Property="VerticalAlignment" Value="Center"/>
    </Style>
  </UserControl.Styles>

  <UserControl.Resources>
    <Flyout x:Key="CommandFlyout" Opening="PopulateFlyout" Closed="ClearFlyout" Placement="Bottom"/>
  </UserControl.Resources>

  <UserControl.DataTemplates>

    <!-- CONTAINER TYPES -->

    <DataTemplate DataType="{x:Type vm:Frame}">
      <Border CornerRadius="5,5,0,0">
      <StackPanel Width="80" Orientation="Vertical">
        <TextBlock Text="{Binding Index}"
         FontSize="18"
         Foreground="{DynamicResource SystemBaseMediumColor}"
         HorizontalAlignment="Center"
         Margin="5"/>
        <Separator
         Background="{DynamicResource SystemControlPageBackgroundMediumAltMediumBrush}"
         Height="5"
         Margin="0,0,0,10"/>
      </StackPanel>
      </Border>
    </DataTemplate>

    <!-- FIELD TYPES -->

    <DataTemplate DataType="{x:Type vm:BoolChoiceField}">
      <StackPanel Classes="field">
        <TextBlock Classes="fieldtitle" Text="{Binding Name}"/>
        <CheckBox
          IsChecked="{Binding Value}"
          IsEnabled="{Binding Editable}"/>
      </StackPanel>
    </DataTemplate>

    <DataTemplate DataType="{x:Type vm:StringSelectionField}">
      <StackPanel Classes="field">
        <TextBlock Classes="fieldtitle" Text="{Binding Name}"/>
        <ComboBox
          ItemsSource="{Binding Choices}"
          SelectedItem="{Binding Choice}"
          IsEnabled="{Binding Editable}"
          MaxDropDownHeight="300"/>
      </StackPanel>
    </DataTemplate>

    <DataTemplate DataType="{x:Type vm:IntSelectionField}">
      <StackPanel Classes="field">
        <TextBlock Classes="fieldtitle" Text="{Binding Name}"/>
        <ComboBox
          ItemsSource="{Binding Choices}"
          SelectedItem="{Binding Choice}"
          IsEnabled="{Binding Editable}"
          MaxDropDownHeight="300"/>
      </StackPanel>
    </DataTemplate>

    <DataTemplate DataType="{x:Type vm:NumEntryField}">
      <StackPanel Classes="field">
        <TextBlock Classes="fieldtitle" Text="{Binding Name}"/>
        <NumericUpDown
          Minimum="{Binding LowerLimit}"
          Maximum="{Binding UpperLimit}"
          Increment="{Binding Increment}"
          Value="{Binding Value}"
          IsEnabled="{Binding Editable}" AllowSpin="true"/>
      </StackPanel>
    </DataTemplate>

    <DataTemplate DataType="{x:Type vm:StringEntryField}">
      <StackPanel Classes="field">
        <TextBlock Classes="fieldtitle" Text="{Binding Name}"/>
        <TextBox
          AcceptsReturn="true"
          Text="{Binding Text}"
          IsEnabled="{Binding Editable}"/>
      </StackPanel>
    </DataTemplate>

    <DataTemplate DataType="{x:Type vm:NumRangeField}">
      <StackPanel Classes="field">
        <TextBlock Classes="fieldtitle" Text="{Binding Name}"/>
        <NumericUpDown
          Minimum="{Binding LowerLimit}"
          Maximum="{Binding UpperLimit}"
          Increment="{Binding Increment}"
          Value="{Binding Value}"
          IsEnabled="{Binding Editable}"
          AllowSpin="true"
          VerticalAlignment="Center"/>
        <Slider
          Minimum="{Binding LowerLimit}"
          Maximum="{Binding UpperLimit}"
          TickFrequency="{Binding Increment}" IsSnapToTickEnabled="{Binding Increment}"
          Value="{Binding Value}"
          IsEnabled="{Binding Editable}"
          Width="200"/>
      </StackPanel>
    </DataTemplate>

    <!-- COMMAND TYPES -->

    <DataTemplate DataType="{x:Type cmds:Basics}">
      <StackPanel Classes="form">
        <Expander Header="Conditions" IsExpanded="{Binding HasCondition}">
          <StackPanel Classes="form">
            <ContentControl Content="{Binding ConditionalType}"/>
            <StackPanel Classes="form" IsVisible="{Binding HasCondition}">
              <ContentControl Content="{Binding ConditionalIndex}"/>
              <ContentControl Content="{Binding ComparisonType}"/>
              <ContentControl Content="{Binding ConditionalValue}"/>
            </StackPanel>
          </StackPanel>
        </Expander>
        <Separator Classes="formsubtitle"/>
      </StackPanel>
    </DataTemplate>

    <DataTemplate DataType="{x:Type cmds:FrJ_}">
      <StackPanel Classes="form">
        <TextBlock Classes="formtitle" Text="{Binding LongName}"/>
        <Separator Classes="formtitle"/>
        <ContentControl Content="{Binding Basics}"/>
        <ContentControl Content="{Binding FrameIndex}"/>
      </StackPanel>
    </DataTemplate>

    <DataTemplate DataType="{x:Type cmds:MAA_}">
      <StackPanel Classes="form">
        <TextBlock Classes="formtitle" Text="{Binding LongName}"/>
        <Separator Classes="formtitle"/>
        <ContentControl Content="{Binding Basics}"/>
        <ContentControl Content="{Binding AssetID}"/>
        <StackPanel>
          <TextBlock Classes="formsubtitle" Text="Primary Animation"/>
          <Separator Classes="formsubtitle"/>
          <StackPanel Classes="preview">
            <ContentControl Content="{Binding PrimaryAnimationID}"/>
            <Button Classes="preview">
              <Button.Flyout>
                <Flyout Opening="LoadModelInScene" Closed="ClearScene">
                  <StackPanel>
                    <Button Classes="popupclose" Click="CloseMe">
                      <PathIcon Data="{StaticResource dismiss_regular}" />
                    </Button>
                    <TextBlock Classes="formtitle" Text="Model Preview"/>
                    <Separator Classes="formtitle"/>
                    <views:GFDRenderingPanel DataContext="{Binding PrimaryAnimPreviewVM}" Width="800" Height="600"/>
                  </StackPanel>
                </Flyout>
              </Button.Flyout>
              <PathIcon Data="{StaticResource eye_show_regular}" />
            </Button>
          </StackPanel>
          <!--ContentControl Content="{Binding PrimaryAnimationSpeed}"/-->
        </StackPanel>
        <StackPanel>
          <TextBlock Classes="formsubtitle" Text="Secondary Animation"/>
          <Separator Classes="formsubtitle"/>
          <StackPanel Classes="preview">
            <ContentControl Content="{Binding SecondaryAnimationID}"/>
            <Button Classes="preview">
              <Button.Flyout>
                <Flyout Opening="LoadModelInScene" Closed="ClearScene">
                  <StackPanel>
                    <Button Classes="popupclose" Click="CloseMe">
                      <PathIcon Data="{StaticResource dismiss_regular}" />
                    </Button>
                    <TextBlock Classes="formtitle" Text="Model Preview"/>
                    <Separator Classes="formtitle"/>
                    <views:GFDRenderingPanel DataContext="{Binding SecondaryAnimPreviewVM}" Width="800" Height="600"/>
                  </StackPanel>
                </Flyout>
              </Button.Flyout>
              <PathIcon Data="{StaticResource eye_show_regular}" />
            </Button>
          </StackPanel>
          <!--ContentControl Content="{Binding SecondaryAnimationSpeed}"/-->
        </StackPanel>
      </StackPanel>
    </DataTemplate>

    <DataTemplate DataType="{x:Type cmds:MAB_}">
      <StackPanel Classes="form">
        <TextBlock Classes="formtitle" Text="{Binding LongName}"/>
        <Separator Classes="formtitle"/>
        <ContentControl Content="{Binding Basics}"/>
        <ContentControl Content="{Binding AssetID}"/>
        <StackPanel> <!--IsVisible="{Binding HasPrimaryAnimation.Value}"-->
          <TextBlock Classes="formsubtitle" Text="Primary Animation"/>
          <Separator Classes="formsubtitle"/>
          <StackPanel Classes="preview">
            <ContentControl Content="{Binding PrimaryAnimationID}"/>
            <Button Classes="preview">
              <Button.Flyout>
                <Flyout Opening="LoadModelInScene" Closed="ClearScene">
                  <StackPanel>
                    <Button Classes="popupclose" Click="CloseMe">
                      <PathIcon Data="{StaticResource dismiss_regular}" />
                    </Button>
                    <TextBlock Classes="formtitle" Text="Model Preview"/>
                    <Separator Classes="formtitle"/>
                    <views:GFDRenderingPanel DataContext="{Binding PrimaryAnimPreviewVM}" Width="800" Height="600"/>
                  </StackPanel>
                </Flyout>
              </Button.Flyout>
              <PathIcon Data="{StaticResource eye_show_regular}" />
            </Button>
          </StackPanel>
          <ContentControl Content="{Binding PrimaryAnimationFromSecondaryFile}"/>
          <!--ContentControl Content="{Binding HasPrimaryAnimation}"/-->
          <ContentControl Content="{Binding PrimaryAnimationSpeed}"/>
        </StackPanel>
        <StackPanel> <!--IsVisible="{Binding HasSecondaryAnimation.Value}"-->
          <TextBlock Classes="formsubtitle" Text="Secondary Animation"/>
          <Separator Classes="formsubtitle"/>
          <StackPanel Classes="preview">
            <ContentControl Content="{Binding SecondaryAnimationID}"/>
            <Button Classes="preview">
              <Button.Flyout>
                <Flyout Opening="LoadModelInScene" Closed="ClearScene">
                  <StackPanel>
                    <Button Classes="popupclose" Click="CloseMe">
                      <PathIcon Data="{StaticResource dismiss_regular}" />
                    </Button>
                    <TextBlock Classes="formtitle" Text="Model Preview"/>
                    <Separator Classes="formtitle"/>
                    <views:GFDRenderingPanel DataContext="{Binding SecondaryAnimPreviewVM}" Width="800" Height="600"/>
                  </StackPanel>
                </Flyout>
              </Button.Flyout>
              <PathIcon Data="{StaticResource eye_show_regular}" />
            </Button>
          </StackPanel>
          <ContentControl Content="{Binding SecondaryAnimationFromSecondaryFile}"/>
          <!--ContentControl Content="{Binding HasSecondaryAnimation}"/-->
          <ContentControl Content="{Binding SecondaryAnimationSpeed}"/>
        </StackPanel>
      </StackPanel>
    </DataTemplate>

    <DataTemplate DataType="{x:Type cmds:MAlp}">
      <StackPanel Classes="form">
        <TextBlock Classes="formtitle" Text="{Binding LongName}"/>
        <Separator Classes="formtitle"/>
        <ContentControl Content="{Binding Basics}"/>
        <ContentControl Content="{Binding AssetID}"/>
        <ContentControl Content="{Binding AlphaLevel}"/>
      </StackPanel>
    </DataTemplate>

    <DataTemplate DataType="{x:Type cmds:MAt_}">
      <StackPanel Classes="form">
        <TextBlock Classes="formtitle" Text="{Binding LongName}"/>
        <Separator Classes="formtitle"/>
        <ContentControl Content="{Binding Basics}"/>
        <StackPanel Classes="preview">
          <ContentControl Content="{Binding AssetID}"/>
          <Button Classes="preview">
            <Button.Flyout>
              <Flyout Opening="LoadModelInScene" Closed="ClearScene">
                <StackPanel>
                  <Button Classes="popupclose" Click="CloseMe">
                    <PathIcon Data="{StaticResource dismiss_regular}" />
                  </Button>
                  <TextBlock Classes="formtitle" Text="Model Preview"/>
                  <Separator Classes="formtitle"/>
                  <views:GFDRenderingPanel DataContext="{Binding ParentModelPreviewVM}" Width="800" Height="600"/>
                </StackPanel>
              </Flyout>
            </Button.Flyout>
            <PathIcon Data="{StaticResource eye_show_regular}" />
          </Button>
        </StackPanel>
        <ContentControl Content="{Binding BoneID}"/>
        <StackPanel Classes="preview">
          <ContentControl Content="{Binding ChildAssetID}"/>
          <Button Classes="preview">
            <Button.Flyout>
              <Flyout Opening="LoadModelInScene" Closed="ClearScene">
                <StackPanel>
                  <Button Classes="popupclose" Click="CloseMe">
                    <PathIcon Data="{StaticResource dismiss_regular}" />
                  </Button>
                  <TextBlock Classes="formtitle" Text="Model Preview"/>
                  <Separator Classes="formtitle"/>
                  <views:GFDRenderingPanel DataContext="{Binding ChildModelPreviewVM}" Width="800" Height="600"/>
                </StackPanel>
              </Flyout>
            </Button.Flyout>
            <PathIcon Data="{StaticResource eye_show_regular}" />
          </Button>
        </StackPanel>
        <ContentControl Content="{Binding FrameDelay}"/>
        <TextBlock Classes="formsubtitle" Text="Relative Position"/>
        <Separator Classes="formsubtitle"/>
        <ContentControl Content="{Binding RelativeXPosition}"/>
        <ContentControl Content="{Binding RelativeYPosition}"/>
        <ContentControl Content="{Binding RelativeZPosition}"/>
        <TextBlock Classes="formsubtitle" Text="Rotation (in degrees)"/>
        <Separator Classes="formsubtitle"/>
        <ContentControl Content="{Binding XRotation}"/>
        <ContentControl Content="{Binding YRotation}"/>
        <ContentControl Content="{Binding ZRotation}"/>
      </StackPanel>
    </DataTemplate>

    <DataTemplate DataType="{x:Type cmds:MAtO}">
      <StackPanel Classes="form">
        <TextBlock Classes="formtitle" Text="{Binding LongName}"/>
        <Separator Classes="formtitle"/>
        <ContentControl Content="{Binding Basics}"/>
        <StackPanel Classes="preview">
          <ContentControl Content="{Binding AssetID}"/>
          <Button Classes="preview">
            <Button.Flyout>
              <Flyout Opening="LoadModelInScene" Closed="ClearScene">
                <StackPanel>
                  <Button Classes="popupclose" Click="CloseMe">
                    <PathIcon Data="{StaticResource dismiss_regular}" />
                  </Button>
                  <TextBlock Classes="formtitle" Text="Model Preview"/>
                  <Separator Classes="formtitle"/>
                  <views:GFDRenderingPanel DataContext="{Binding ParentModelPreviewVM}" Width="800" Height="600"/>
                </StackPanel>
              </Flyout>
            </Button.Flyout>
            <PathIcon Data="{StaticResource eye_show_regular}" />
          </Button>
        </StackPanel>
        <StackPanel Classes="preview">
          <ContentControl Content="{Binding ChildAssetID}"/>
          <Button Classes="preview">
            <Button.Flyout>
              <Flyout Opening="LoadModelInScene" Closed="ClearScene">
                <StackPanel>
                  <Button Classes="popupclose" Click="CloseMe">
                    <PathIcon Data="{StaticResource dismiss_regular}" />
                  </Button>
                  <TextBlock Classes="formtitle" Text="Model Preview"/>
                  <Separator Classes="formtitle"/>
                  <views:GFDRenderingPanel DataContext="{Binding ChildModelPreviewVM}" Width="800" Height="600"/>
                </StackPanel>
              </Flyout>
            </Button.Flyout>
            <PathIcon Data="{StaticResource eye_show_regular}" />
          </Button>
        </StackPanel>
        <ContentControl Content="{Binding FrameDelay}"/>
        <TextBlock Classes="formsubtitle" Text="Relative Position"/>
        <Separator Classes="formsubtitle"/>
        <ContentControl Content="{Binding RelativeXPosition}"/>
        <ContentControl Content="{Binding RelativeYPosition}"/>
        <ContentControl Content="{Binding RelativeZPosition}"/>
        <TextBlock Classes="formsubtitle" Text="Rotation (in degrees)"/>
        <Separator Classes="formsubtitle"/>
        <ContentControl Content="{Binding XRotation}"/>
        <ContentControl Content="{Binding YRotation}"/>
        <ContentControl Content="{Binding ZRotation}"/>
      </StackPanel>
    </DataTemplate>

    <DataTemplate DataType="{x:Type cmds:MDt_}">
      <StackPanel Classes="form">
        <TextBlock Classes="formtitle" Text="{Binding LongName}"/>
        <Separator Classes="formtitle"/>
        <ContentControl Content="{Binding Basics}"/>
        <StackPanel Classes="preview">
          <ContentControl Content="{Binding AssetID}"/>
          <Button Classes="preview">
            <Button.Flyout>
              <Flyout Opening="LoadModelInScene" Closed="ClearScene">
                <StackPanel>
                  <Button Classes="popupclose" Click="CloseMe">
                    <PathIcon Data="{StaticResource dismiss_regular}" />
                  </Button>
                  <TextBlock Classes="formtitle" Text="Model Preview"/>
                  <Separator Classes="formtitle"/>
                  <views:GFDRenderingPanel DataContext="{Binding ParentModelPreviewVM}" Width="800" Height="600"/>
                </StackPanel>
              </Flyout>
            </Button.Flyout>
            <PathIcon Data="{StaticResource eye_show_regular}" />
          </Button>
        </StackPanel>
        <ContentControl Content="{Binding BoneID}"/>
        <StackPanel Classes="preview">
          <ContentControl Content="{Binding ChildAssetID}"/>
          <Button Classes="preview">
            <Button.Flyout>
              <Flyout Opening="LoadModelInScene" Closed="ClearScene">
                <StackPanel>
                  <Button Classes="popupclose" Click="CloseMe">
                    <PathIcon Data="{StaticResource dismiss_regular}" />
                  </Button>
                  <TextBlock Classes="formtitle" Text="Model Preview"/>
                  <Separator Classes="formtitle"/>
                  <views:GFDRenderingPanel DataContext="{Binding ChildModelPreviewVM}" Width="800" Height="600"/>
                </StackPanel>
              </Flyout>
            </Button.Flyout>
            <PathIcon Data="{StaticResource eye_show_regular}" />
          </Button>
        </StackPanel>
        <ContentControl Content="{Binding FrameDelay}"/>
        <TextBlock Classes="formsubtitle" Text="Relative Position"/>
        <Separator Classes="formsubtitle"/>
        <ContentControl Content="{Binding RelativeXPosition}"/>
        <ContentControl Content="{Binding RelativeYPosition}"/>
        <ContentControl Content="{Binding RelativeZPosition}"/>
        <TextBlock Classes="formsubtitle" Text="Rotation (in degrees)"/>
        <Separator Classes="formsubtitle"/>
        <ContentControl Content="{Binding XRotation}"/>
        <ContentControl Content="{Binding YRotation}"/>
        <ContentControl Content="{Binding ZRotation}"/>
      </StackPanel>
    </DataTemplate>

    <DataTemplate DataType="{x:Type cmds:MIc_}">
      <StackPanel Classes="form">
        <TextBlock Classes="formtitle" Text="{Binding LongName}"/>
        <Separator Classes="formtitle"/>
        <ContentControl Content="{Binding Basics}"/>
        <ContentControl Content="{Binding AssetID}"/>
        <TextBlock Classes="formsubtitle" Text="Icon"/>
        <Separator Classes="formsubtitle"/>
        <ContentControl Content="{Binding IconType}"/>
        <ContentControl Content="{Binding IconSize}"/>
      </StackPanel>
    </DataTemplate>

    <DataTemplate DataType="{x:Type cmds:MLa_}">
      <StackPanel Classes="form">
        <TextBlock Classes="formtitle" Text="{Binding LongName}"/>
        <Separator Classes="formtitle"/>
        <ContentControl Content="{Binding Basics}"/>
        <ContentControl Content="{Binding AssetID}"/>
        <TextBlock Classes="formsubtitle" Text="Target Position"/>
        <Separator Classes="formsubtitle"/>
        <ContentControl Content="{Binding X}"/>
        <ContentControl Content="{Binding Y}"/>
        <ContentControl Content="{Binding Z}"/>
      </StackPanel>
    </DataTemplate>

    <DataTemplate DataType="{x:Type cmds:MRgs}">
      <StackPanel Classes="form">
        <TextBlock Classes="formtitle" Text="{Binding LongName}"/>
        <Separator Classes="formtitle"/>
        <ContentControl Content="{Binding Basics}"/>
        <ContentControl Content="{Binding AssetID}"/>
        <ContentControl Content="{Binding Action}"/>
      </StackPanel>
    </DataTemplate>

    <DataTemplate DataType="{x:Type cmds:MRot}">
      <StackPanel Classes="form">
        <TextBlock Classes="formtitle" Text="{Binding LongName}"/>
        <Separator Classes="formtitle"/>
        <ContentControl Content="{Binding Basics}"/>
        <ContentControl Content="{Binding AssetID}"/>
        <ContentControl Content="{Binding FrameDelay}"/>
        <ContentControl Content="{Binding FrameDuration}"/>
        <TextBlock Classes="formsubtitle" Text="Rotation (in degrees)"/>
        <Separator Classes="formsubtitle"/>
        <ContentControl Content="{Binding X}"/>
        <ContentControl Content="{Binding Y}"/>
        <ContentControl Content="{Binding Z}"/>
        <TextBlock Classes="formsubtitle" Text="Animation #1"/>
        <Separator Classes="formsubtitle"/>
        <ContentControl Content="{Binding Animation1ID}"/>
        <ContentControl Content="{Binding Animation1Speed}"/>
        <ContentControl Content="{Binding Animation1Loop}"/>
        <TextBlock Classes="formsubtitle" Text="Animation #2"/>
        <Separator Classes="formsubtitle"/>
        <ContentControl Content="{Binding Animation2ID}"/>
        <ContentControl Content="{Binding Animation2Speed}"/>
        <ContentControl Content="{Binding Animation2Loop}"/>
      </StackPanel>
    </DataTemplate>

    <DataTemplate DataType="{x:Type cmds:MSD_}">
      <StackPanel Classes="form">
        <TextBlock Classes="formtitle" Text="{Binding LongName}"/>
        <Separator Classes="formtitle"/>
        <ContentControl Content="{Binding Basics}"/>
        <StackPanel Classes="preview">
          <ContentControl Content="{Binding AssetID}"/>
          <Button Classes="preview">
            <Button.Flyout>
              <Flyout Opening="LoadModelInScene" Closed="ClearScene">
                <StackPanel>
                  <Button Classes="popupclose" Click="CloseMe">
                    <PathIcon Data="{StaticResource dismiss_regular}" />
                  </Button>
                  <TextBlock Classes="formtitle" Text="Model Preview"/>
                  <Separator Classes="formtitle"/>
                  <views:GFDRenderingPanel DataContext="{Binding ModelPreviewVM}" Width="800" Height="600"/>
                </StackPanel>
              </Flyout>
            </Button.Flyout>
            <PathIcon Data="{StaticResource eye_show_regular}" />
          </Button>
        </StackPanel>
        <Expander Header="Position">
          <StackPanel Classes="form">
            <ContentControl Content="{Binding X}"/>
            <ContentControl Content="{Binding Y}"/>
            <ContentControl Content="{Binding Z}"/>
          </StackPanel>
        </Expander>
        <TextBlock Classes="formsubtitle" Text="Animation"/>
        <Separator Classes="formsubtitle"/>
        <ContentControl Content="{Binding AnimationID}"/>
        <ContentControl Content="{Binding AnimationSpeed}"/>
        <ContentControl Content="{Binding Loop}"/>
        <ContentControl Content="{Binding StartFrame}"/>
        <ContentControl Content="{Binding EndFrame}"/>
      </StackPanel>
    </DataTemplate>

    <DataTemplate DataType="{x:Type cmds:Msg_}">
      <StackPanel Classes="form">
        <TextBlock Classes="formtitle" Text="{Binding LongName}"/>
        <Separator Classes="formtitle"/>
        <ContentControl Content="{Binding Basics}"/>
        <ContentControl Content="{Binding IsSubtitle}"/>
        <Separator Classes="formsubtitle"/>
        <ContentControl Content="{Binding HasMessage}"/>
        <ContentControl Content="{Binding MessageID}" IsVisible="{Binding HasMessage.Value}"/>
        <ContentControl Content="{Binding MessageBlock}" IsVisible="{Binding HasMessage.Value}"/>
        <Separator Classes="formsubtitle"/>
        <ContentControl Content="{Binding HasSelection}"/>
        <ContentControl Content="{Binding SelectionID}" IsVisible="{Binding HasSelection.Value}"/>
        <ContentControl Content="{Binding SelectionBlock}" IsVisible="{Binding HasSelection.Value}"/>
      </StackPanel>
    </DataTemplate>

    <DataTemplate DataType="{x:Type cmds:MsgR}">
      <StackPanel Classes="form">
        <TextBlock Classes="formtitle" Text="{Binding LongName}"/>
        <Separator Classes="formtitle"/>
        <ContentControl Content="{Binding Basics}"/>
        <ContentControl Content="{Binding IsSubtitle}"/>
        <Separator Classes="formsubtitle"/>
        <ContentControl Content="{Binding HasMessage}"/>
        <ContentControl Content="{Binding MessageID}" IsVisible="{Binding HasMessage.Value}"/>
        <ContentControl Content="{Binding MessageBlock}" IsVisible="{Binding HasMessage.Value}"/>
        <Separator Classes="formsubtitle"/>
        <ContentControl Content="{Binding HasSelection}"/>
        <ContentControl Content="{Binding SelectionID}" IsVisible="{Binding HasSelection.Value}"/>
        <ContentControl Content="{Binding SelectionBlock}" IsVisible="{Binding HasSelection.Value}"/>
      </StackPanel>
    </DataTemplate>

    <DataTemplate DataType="{x:Type cmds:MessagePreview}">
      <Expander Header="Message Details">
        <StackPanel Classes="form">
          <ContentControl Content="{Binding MessageType}"/>
          <ContentControl Content="{Binding Speaker}"/>
          <ItemsControl ItemsSource="{Binding Pages}">
            <ItemsControl.ItemTemplate>
              <DataTemplate>
                <StackPanel Classes="preview">
                  <ContentControl Content="{Binding Dialogue}" Margin="0,5,0,5"/>
                  <Button Click="PlayVoiceTrack" ToolTip.Tip="Play/Pause Selected Track" IsVisible="{Binding HasVoiceLine}">
                    <PathIcon Data="{StaticResource video_play_pause_regular}" />
                  </Button>
                </StackPanel>
              </DataTemplate>
            </ItemsControl.ItemTemplate>
          </ItemsControl>
        </StackPanel>
      </Expander>
    </DataTemplate>

    <DataTemplate DataType="{x:Type cmds:SelectionPreview}">
      <Expander Header="Selection Details">
        <StackPanel Classes="form">
          <ItemsControl ItemsSource="{Binding Options}">
            <ItemsControl.ItemTemplate>
              <DataTemplate>
                <ContentControl Content="{Binding Dialogue}" Margin="0,5,0,5"/>
              </DataTemplate>
            </ItemsControl.ItemTemplate>
          </ItemsControl>
        </StackPanel>
      </Expander>
    </DataTemplate>

    <DataTemplate DataType="{x:Type cmds:Scr_}">
      <StackPanel Classes="form">
        <TextBlock Classes="formtitle" Text="{Binding LongName}"/>
        <Separator Classes="formtitle"/>
        <ContentControl Content="{Binding Basics}"/>
        <ContentControl Content="{Binding ProcedureIndex}"/>
      </StackPanel>
    </DataTemplate>

    <DataTemplate DataType="{x:Type cmds:SBE_}">
      <StackPanel Classes="form">
        <TextBlock Classes="formtitle" Text="{Binding LongName}"/>
        <Separator Classes="formtitle"/>
        <ContentControl Content="{Binding Basics}"/>
        <ContentControl Content="{Binding CueID}"/>
        <ContentControl Content="{Binding Action}"/>
        <ContentControl Content="{Binding Enable}"/>
      </StackPanel>
    </DataTemplate>

    <DataTemplate DataType="{x:Type cmds:SBEA}">
      <StackPanel Classes="form">
        <TextBlock Classes="formtitle" Text="{Binding LongName}"/>
        <Separator Classes="formtitle"/>
        <ContentControl Content="{Binding Basics}"/>
        <ContentControl Content="{Binding Action}"/>
      </StackPanel>
    </DataTemplate>

    <DataTemplate DataType="{x:Type cmds:SFts}">
      <StackPanel Classes="form">
        <TextBlock Classes="formtitle" Text="{Binding LongName}"/>
        <Separator Classes="formtitle"/>
        <ContentControl Content="{Binding Basics}"/>
        <ContentControl Content="{Binding AssetID}"/>
        <ContentControl Content="{Binding Enable}"/>
      </StackPanel>
    </DataTemplate>

    <DataTemplate DataType="{x:Type cmds:Snd_}">
      <StackPanel Classes="form">
        <TextBlock Classes="formtitle" Text="{Binding LongName}"/>
        <Separator Classes="formtitle"/>
        <ContentControl Content="{Binding Basics}"/>
        <ContentControl Content="{Binding Action}"/>
        <ContentControl Content="{Binding Source}"/>
        <ContentControl Content="{Binding FadeDuration}"/>
        <ContentControl Content="{Binding Channel}" IsVisible="{Binding IsPlayCmd}"/>
        <StackPanel Classes="preview" IsVisible="{Binding IsPlayCmd}">
          <ContentControl Content="{Binding CueID}"/>
          <Button Click="PlaySFXTrack" ToolTip.Tip="Play/Pause Selected Track">
            <PathIcon Data="{StaticResource video_play_pause_regular}" />
          </Button>
        </StackPanel>
      </StackPanel>
    </DataTemplate>

    <DataTemplate DataType="{x:Type cmds:Generic}">
      <StackPanel Classes="form">
        <TextBlock Classes="formtitle" Text="{Binding LongName}"/>
        <Separator Classes="formtitle"/>
        <ContentControl Content="{Binding Basics}"/>
        <TextBlock Classes="placeholder" Text="(Not yet implemented.)"
         HorizontalAlignment="Center"/>
      </StackPanel>
    </DataTemplate>

  </UserControl.DataTemplates>

  <DockPanel DataContext="{Binding TimelineContent}">
    <DockPanel DockPanel.Dock="Top">
      <StackPanel Orientation="Horizontal" DockPanel.Dock="Left">
        <Button Name="ShowCategories" Click="ShowAllCategories" CornerRadius="5,0,0,5" Background="{DynamicResource SystemAccentColor}">
          <Button.Styles>
            <Style Selector="Button#ShowCategories:pointerover ContentPresenter">
              <Setter Property="Background" Value="{DynamicResource SystemAccentColorDark1}"/>
            </Style>
          </Button.Styles>
          Show All
        </Button>
        <Button Click="HideAllCategories" CornerRadius="0,5,5,0">Hide All</Button>
      </StackPanel>
      <StackPanel Classes="field" DockPanel.Dock="Right">
        <Slider
         Minimum="0"
         Maximum="{c:Binding FrameCount-1}"
         TickFrequency="1" IsSnapToTickEnabled="true"
         Value="{Binding ActiveFrame}"
         Width="200"/>
        <NumericUpDown ValueChanged="JumpToFrame"
         Minimum="0"
         Maximum="{c:Binding FrameCount-1}"
         Increment="1"
         Value="{Binding ActiveFrame}"
         AllowSpin="true"
         VerticalAlignment="Center"/>
      </StackPanel>
    </DockPanel>
    <Grid>
      <ScrollViewer Name="FramesScroller" HorizontalScrollBarVisibility="Hidden" VerticalScrollBarVisibility="Disabled" Margin="153,0,16,16" Offset="{Binding $parent[views:TimelinePanel].HPos, Mode=TwoWay}">
        <ItemsControl ItemsSource="{Binding Frames}" Name="FramesHaver">
          <ItemsControl.Styles>
            <Style Selector="ItemsControl > ContentPresenter:nth-child(even) > Border">
              <Setter Property="Background" Value="{DynamicResource SystemControlBackgroundChromeMediumLowBrush}"/>
            </Style>
            <Style Selector="ItemsControl > ContentPresenter:nth-child(odd) > Border">
              <Setter Property="Background" Value="{DynamicResource SystemListLowColor}"/>
            </Style>
            <Style Selector="ItemsControl > ContentPresenter:pointerover > Border">
              <Setter Property="Background" Value="{DynamicResource SystemListMediumColor}"/>
            </Style>
            <Style Selector="ItemsControl > ContentPresenter:pointerover > Border > StackPanel > TextBlock">
              <Setter Property="Foreground" Value="{DynamicResource SystemAccentColor}"/>
            </Style>
          </ItemsControl.Styles>
          <ItemsControl.ItemsPanel>
            <ItemsPanelTemplate>
              <StackPanel Orientation="Horizontal" Spacing="5"/>
            </ItemsPanelTemplate>
          </ItemsControl.ItemsPanel>
        </ItemsControl>
      </ScrollViewer>
      <ScrollViewer Name="CategoriesScroller" HorizontalScrollBarVisibility="Disabled" VerticalScrollBarVisibility="Visible" Margin="0,37,0,16" Offset="{Binding $parent[views:TimelinePanel].VPos, Mode=TwoWay}" AllowAutoHide="false">
        <ItemsControl ItemsSource="{Binding Categories}">
          <ItemsControl.Styles>
            <Style Selector="ItemsControl > ContentPresenter > Border">
              <Setter Property="Background" Value="{DynamicResource SystemListLowColor}"/>
            </Style>
            <Style Selector="ItemsControl > ContentPresenter > Border.hide">
              <Setter Property="Background" Value="{DynamicResource SystemAltLowColor}"/>
            </Style>
            <Style Selector="ItemsControl > ContentPresenter:pointerover > Border">
              <Setter Property="Background" Value="{DynamicResource SystemListMediumColor}"/>
            </Style>
            <Style Selector="ItemsControl > ContentPresenter:pointerover > Border > DockPanel > ToggleButton TextBlock">
              <Setter Property="Foreground" Value="{DynamicResource SystemAccentColor}"/>
            </Style>
          </ItemsControl.Styles>
          <ItemsControl.ItemsPanel>
            <ItemsPanelTemplate>
              <StackPanel Orientation="Vertical" Spacing="5" Margin="0,0,16,0"/>
            </ItemsPanelTemplate>
          </ItemsControl.ItemsPanel>
          <ItemsControl.ItemTemplate>
            <DataTemplate>
              <Border CornerRadius="5,0,0,5"
                 Classes.show="{Binding IsOpen}"
                 Classes.hide="{Binding !IsOpen}">
                <DockPanel MinHeight="40" Height="{c:Binding (IsOpen) ? 60*MaxInOneFrame + 20 : 40}" VerticalAlignment="Center" HorizontalAlignment="Stretch">
                  <ToggleButton IsChecked="{Binding IsOpen}" HorizontalAlignment="Stretch" VerticalAlignment="Stretch" DockPanel.Dock="Left" CornerRadius="0">
                    <ToggleButton.Styles>
                      <Style Selector="ToggleButton">
                        <Setter Property="Background" Value="Transparent"/>
                      </Style>
                      <Style Selector="ToggleButton:checked">
                        <Setter Property="Background" Value="Transparent"/>
                      </Style>
                      <Style Selector="ToggleButton ContentPresenter">
                        <Setter Property="Background" Value="Transparent"/>
                      </Style>
                      <Style Selector="ToggleButton:pointerover ContentPresenter">
                        <Setter Property="Background" Value="Transparent"/>
                      </Style>
                      <Style Selector="ToggleButton:checked ContentPresenter">
                        <Setter Property="Background" Value="Transparent"/>
                      </Style>
                      <Style Selector="ToggleButton PathIcon">
                        <Setter Property="Data" Value="{StaticResource chevron_up_regular}"/>
                        <Setter Property="Foreground" Value="{DynamicResource SystemBaseLowColor}"/>
                      </Style>
                      <Style Selector="ToggleButton:checked PathIcon">
                        <Setter Property="Data" Value="{StaticResource chevron_down_regular}"/>
                        <Setter Property="Foreground" Value="{DynamicResource SystemAccentColor}"/>
                      </Style>
                    </ToggleButton.Styles>
                    <DockPanel>
                      <PathIcon DockPanel.Dock="Left" Margin="5"/>
                      <TextBlock Text="{Binding Name}"
                       FontSize="18"
                       Foreground="{DynamicResource SystemBaseMediumColor}"
                       HorizontalAlignment="Center"
                       TextAlignment="Center"
                       VerticalAlignment="Center"
                       Width="100"/>
                    </DockPanel>
                  </ToggleButton>
                  <Rectangle
                   Fill="{DynamicResource SystemControlPageBackgroundMediumAltMediumBrush}"
                   Width="5"
                   VerticalAlignment="Stretch"/>
                  <Panel DockPanel.Dock="Right" />
                </DockPanel>
              </Border>
            </DataTemplate>
          </ItemsControl.ItemTemplate>
        </ItemsControl>
      </ScrollViewer>
      <ScrollViewer HorizontalScrollBarVisibility="Visible" VerticalScrollBarVisibility="Disabled" Margin="153,37,16,0" Offset="{Binding $parent[views:TimelinePanel].HPos, Mode=TwoWay}" AllowAutoHide="false">
        <ScrollViewer HorizontalScrollBarVisibility="Disabled" VerticalScrollBarVisibility="Hidden" Offset="{Binding $parent[views:TimelinePanel].VPos, Mode=TwoWay}" Margin="0,0,0,16" PointerPressed="LogPosition">
          <ScrollViewer.ContextMenu>
            <ContextMenu IsEnabled="{Binding !$parent[views:TimelinePanel]((vm:TimelinePanelViewModel)DataContext).Config.ReadOnly}">
              <MenuItem Header="New" />
              <MenuItem Header="Paste" Click="PasteCommand" IsEnabled="{Binding $parent[views:TimelinePanel]((vm:TimelinePanelViewModel)DataContext).HasCopiedCommand}" />
            </ContextMenu>
          </ScrollViewer.ContextMenu> 
          <ItemsControl ItemsSource="{Binding Categories}" VerticalAlignment="Stretch">
            <ItemsControl.ItemsPanel>
              <ItemsPanelTemplate>
                <StackPanel Orientation="Vertical" Spacing="5"/>
              </ItemsPanelTemplate>
            </ItemsControl.ItemsPanel>
            <ItemsControl.ItemTemplate>
              <DataTemplate>
                <ItemsControl ItemsSource="{Binding Commands}" MinHeight="40"
                 Classes.show="{Binding IsOpen}"
                 Classes.hide="{Binding !IsOpen}">
                  <ItemsControl.ItemsPanel>
                    <ItemsPanelTemplate>
                      <Canvas MinHeight="40" Height="{c:Binding (IsOpen) ? 60*MaxInOneFrame + 20 : 40}" Width="{c:Binding 85*FrameCount - 5}" Classes.open="{Binding IsOpen}" Classes.closed="{Binding !IsOpen}"/>
                    </ItemsPanelTemplate>
                  </ItemsControl.ItemsPanel>
                  <ItemsControl.Styles>
                    <Style Selector="ContentPresenter"> <!--x:DataType="vm:CommandPointer"-->
                      <Setter Property="Canvas.Left" Value="{c:Binding 85*Frame + 10}"/>
                    </Style>
                    <Style Selector="ItemsControl.show > ContentPresenter">
                      <Setter Property="Canvas.Top" Value="{c:Binding 60*PositionWithinFrame + 10}"/>
                    </Style>
                    <Style Selector="ItemsControl.hide > ContentPresenter">
                      <Setter Property="Canvas.Top" Value="10"/>
                    </Style>
                    <Style Selector="ItemsControl.show > ContentPresenter > Button">
                      <Setter Property="Height" Value="60"/>
                      <Setter Property="IsEnabled" Value="true"/>
                    </Style>
                    <Style Selector="ItemsControl.hide > ContentPresenter > Button">
                      <Setter Property="Height" Value="20"/>
                      <Setter Property="IsEnabled" Value="false"/>
                    </Style>
                    <Style Selector="ItemsControl.show ContentPresenter > Button > TextBlock">
                      <Setter Property="IsVisible" Value="true"/>
                    </Style>
                    <Style Selector="ItemsControl.hide ContentPresenter > Button > TextBlock">
                      <Setter Property="IsVisible" Value="false"/>
                    </Style>
                  </ItemsControl.Styles>
                  <ItemsControl.ItemTemplate>
                    <DataTemplate>
                      <Button Flyout="{StaticResource CommandFlyout}"
                       HorizontalAlignment="Center"
                       Width="{c:Binding 60 + 85*(Duration-1)}">
                        <Button.ContextMenu>
                          <ContextMenu IsEnabled="{Binding !$parent[views:TimelinePanel]((vm:TimelinePanelViewModel)DataContext).Config.ReadOnly}">
                            <MenuItem Header="Cut"    Click="CutCommand"    />
                            <MenuItem Header="Copy"   Click="CopyCommand"   />
                            <MenuItem Header="Delete" Click="DeleteCommand" />
                          </ContextMenu>
                        </Button.ContextMenu> 
                        <TextBlock Text="{Binding Code}"
                         HorizontalAlignment="Left"
                         VerticalAlignment="Center"/>
                      </Button>
                    </DataTemplate>
                  </ItemsControl.ItemTemplate>
                </ItemsControl>
              </DataTemplate>
            </ItemsControl.ItemTemplate>
          </ItemsControl>
        </ScrollViewer>
      </ScrollViewer>
    </Grid>
  </DockPanel>

</rxui:ReactiveUserControl>
