<rxui:ReactiveUserControl xmlns="https://github.com/avaloniaui"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
             xmlns:c="clr-namespace:CalcBinding;assembly=CalcBindingAva"
             xmlns:rxui="http://reactiveui.net"
             mc:Ignorable="d" d:DesignWidth="800" d:DesignHeight="450"
             xmlns:vm="using:EVTUI.ViewModels"
             xmlns:cmds="using:EVTUI.ViewModels.TimelineCommands"
             xmlns:views="using:EVTUI.Views"
             x:DataType="vm:TimelinePanelViewModel"
             x:Class="EVTUI.Views.TimelinePanel"
             x:TypeArguments="vm:TimelinePanelViewModel">

  <UserControl.Styles>
    <Style Selector="Button.selected">
      <Setter Property="Background" Value="{DynamicResource SystemAccentColor}"/>
    </Style>
    <Style Selector="StackPanel.preview">
      <Setter Property="HorizontalAlignment" Value="Right"/>
      <Setter Property="Orientation" Value="Horizontal"/>
      <Setter Property="Spacing" Value="5"/>
    </Style>
    <Style Selector="Button.preview">
      <Setter Property="Height" Value="32"/>
      <Setter Property="HorizontalAlignment" Value="Center"/>
      <Setter Property="Margin" Value="5"/>
      <Setter Property="ToolTip.Tip" Value="Preview"/>
      <Setter Property="Width" Value="32"/>
    </Style>
    <Style Selector="Border.inactive">
      <Setter Property="Opacity" Value="0.5"/>
    </Style>
    <Style Selector="Button.inactive">
      <Setter Property="Opacity" Value="0.5"/>
    </Style>
  </UserControl.Styles>

  <UserControl.Resources>
    <Flyout x:Key="CommandFlyout" Opening="PopulateFlyout" Closed="ClearFlyout" Placement="Bottom"/>
  </UserControl.Resources>

  <UserControl.DataTemplates>

    <!-- CONTAINER TYPES -->

    <DataTemplate DataType="{x:Type vm:Frame}">
      <Border CornerRadius="5,5,0,0" Classes.inactive="{Binding !IsInPlayRange}" Classes.marked="{Binding IsMarked}" PointerReleased="ToggleMarker" IsEnabled="{Binding !$parent[views:TimelinePanel]((vm:TimelinePanelViewModel)DataContext).Config.ReadOnly}">
      <StackPanel Width="80" Orientation="Vertical">
        <TextBlock Text="{Binding Index}"
         FontSize="18"
         Foreground="{DynamicResource SystemBaseMediumColor}"
         HorizontalAlignment="Center"
         Margin="5"/>
        <Separator
         Background="{DynamicResource SystemControlPageBackgroundMediumAltMediumBrush}"
         Height="5"
         Margin="0,0,0,10"/>
      </StackPanel>
      </Border>
    </DataTemplate>

    <!-- FIELD TYPES -->

    <DataTemplate DataType="{x:Type vm:AnimationWidget}">
      <StackPanel Classes="form" Margin="0 10 0 0">
        <Expander Header="{Binding Name}">
          <StackPanel Classes="form">
            <ContentControl Content="{Binding AnimationEnabled}"/>
            <StackPanel Classes="form" IsVisible="{Binding AnimationEnabled.Value}">
              <Button
               Height="32"
               HorizontalAlignment="Right"
               Margin="5"
               ToolTip.Tip="Preview + Edit"
               Width="64">
                <Button.Styles>
                  <Style Selector="FlyoutPresenter">
                    <Setter Property="MaxHeight" Value="800"/>
                    <Setter Property="MaxWidth" Value="1200"/>
                  </Style>
                </Button.Styles>
                <Button.Flyout>
                  <Flyout>
                    <StackPanel>
                      <Button Classes="popupclose" Click="CloseMe">
                        <PathIcon Data="{StaticResource dismiss_regular}" />
                      </Button>
                      <TextBlock Classes="formtitle" Text="Model Preview"/>
                      <Separator Classes="formtitle"/>
                      <StackPanel Orientation="Horizontal">
                        <StackPanel Classes="form">
                          <StackPanel Orientation="Horizontal" Spacing="30" HorizontalAlignment="Center">
                            <ContentControl Content="{Binding AnimationID}"/>
                            <ContentControl Content="{Binding AnimationFromExt}"/>
                          </StackPanel>
                          <views:GFDRenderingPanel DataContext="{Binding AnimationPreviewVM}" Width="800" Height="600"/>
                        </StackPanel>
                        <StackPanel Classes="form">
                          <ContentControl Content="{Binding AnimationLoopBool}"/>
                          <ContentControl Content="{Binding AnimationFrameBlendingEnabled}"/>
                          <ContentControl Content="{Binding AnimationStartingFrame}"/>
                          <ContentControl Content="{Binding AnimationEndingFrame}"/>
                          <ContentControl Content="{Binding AnimationInterpolatedFrames}"/>
                          <ContentControl Content="{Binding AnimationPlaybackSpeed}"/>
                          <ContentControl Content="{Binding AnimationWeight}"/>
                        </StackPanel>
                      </StackPanel>
                    </StackPanel>
                  </Flyout>
                </Button.Flyout>
                <StackPanel Orientation="Horizontal" Spacing="5">
                  <PathIcon Data="{StaticResource eye_show_regular}" />
                  <PathIcon Data="{StaticResource edit_regular}" />
                </StackPanel>
              </Button>
            </StackPanel>
          </StackPanel>
        </Expander>
      </StackPanel>
    </DataTemplate>

    <DataTemplate DataType="{x:Type vm:ModelPreviewWidget}">
      <Button Classes="preview">
        <Button.Styles>
          <Style Selector="FlyoutPresenter">
            <Setter Property="MaxHeight" Value="800"/>
            <Setter Property="MaxWidth" Value="1200"/>
          </Style>
        </Button.Styles>
        <Button.Flyout>
          <Flyout>
            <StackPanel>
              <Button Classes="popupclose" Click="CloseMe">
                <PathIcon Data="{StaticResource dismiss_regular}" />
              </Button>
              <TextBlock Classes="formtitle" Text="Model Preview"/>
              <Separator Classes="formtitle"/>
              <views:GFDRenderingPanel DataContext="{Binding ModelPreviewVM}" Width="800" Height="600"/>
            </StackPanel>
          </Flyout>
        </Button.Flyout>
        <PathIcon Data="{StaticResource eye_show_regular}" />
      </Button>
    </DataTemplate>

    <DataTemplate DataType="{x:Type vm:InterpolationParameters}">
      <StackPanel Classes="form">
        <Expander Header="Interpolation">
          <StackPanel Classes="form">
            <ContentControl Content="{Binding InterpolationType}"/>
            <ContentControl Content="{Binding SlopeInType}" IsVisible="{c:Binding 'InterpolationType.Choice == \'Hermite\''}"/>
            <ContentControl Content="{Binding SlopeOutType}" IsVisible="{c:Binding 'InterpolationType.Choice == \'Hermite\''}"/>
          </StackPanel>
        </Expander>
      </StackPanel>
    </DataTemplate>

    <!-- COMMAND TYPES -->

    <DataTemplate DataType="{x:Type cmds:Basics}">
      <StackPanel Classes="form">
        <Expander Header="Conditions" IsExpanded="{c:Binding 'ForceSkipCommand.Value || ConditionalType.Choice != \'Always Run\'', Mode=OneTime}">
          <StackPanel Classes="form">
            <ContentControl Content="{Binding ForceSkipCommand}"/>
            <StackPanel Classes="form" IsVisible="{Binding !ForceSkipCommand.Value}">
              <ContentControl Content="{Binding ConditionalType}"/>
              <StackPanel Classes="form" IsVisible="{c:Binding '(ConditionalType.Choice != \'Always Run\') and (ConditionalType.Choice != \'Never Run\')', Mode=OneWay}">
                <ContentControl Content="{Binding ConditionalIndex}"/>
                <ContentControl Content="{Binding ComparisonType}"/>
                <ContentControl Content="{Binding ConditionalValue}"/>
              </StackPanel>
            </StackPanel>
          </StackPanel>
        </Expander>
        <Expander Header="Frame Settings" IsExpanded="false">
          <StackPanel Classes="form">
            <ContentControl Content="{Binding WaitOnCommand}"/>
            <ContentControl Content="{Binding StartingFrame}"/>
            <ContentControl Content="{Binding FrameCount}"/>
          </StackPanel>
        </Expander>
        <Separator Classes="formsubtitle"/>
      </StackPanel>
    </DataTemplate>

    <DataTemplate DataType="{x:Type cmds:CAA_}">
      <StackPanel Classes="form">
        <TextBlock Classes="formtitle" Text="{Binding LongName}"/>
        <Separator Classes="formtitle"/>
        <ContentControl Content="{Binding Basics}"/>
        <ContentControl Content="{Binding LoopBool}"/>
        <ContentControl Content="{Binding EnableViewAngleUpdate}"/>
        <Expander Header="Animation Source">
          <StackPanel Classes="form">
            <ContentControl Content="{Binding AssetID}"/>
            <ContentControl Content="{Binding AnimationID}"/>
            <ContentControl Content="{Binding PlaybackSpeed}"/>
          </StackPanel>
        </Expander>
      </StackPanel>
    </DataTemplate>

    <DataTemplate DataType="{x:Type cmds:CAR_}">
      <StackPanel Classes="form">
        <TextBlock Classes="formtitle" Text="{Binding LongName}"/>
        <Separator Classes="formtitle"/>
        <ContentControl Content="{Binding Basics}"/>
        <ContentControl Content="{Binding ResetCommand}"/>
        <ContentControl Content="{Binding ResetParameters}"/>
      </StackPanel>
    </DataTemplate>

    <DataTemplate DataType="{x:Type cmds:CClp}">
      <StackPanel Classes="form">
        <TextBlock Classes="formtitle" Text="{Binding LongName}"/>
        <Separator Classes="formtitle"/>
        <ContentControl Content="{Binding Basics}"/>
        <ContentControl Content="{Binding NearClip}"/>
        <ContentControl Content="{Binding FarClip}"/>
      </StackPanel>
    </DataTemplate>

    <DataTemplate DataType="{x:Type cmds:CMC_}">
      <StackPanel Classes="form">
        <TextBlock Classes="formtitle" Text="{Binding LongName}"/>
        <Separator Classes="formtitle"/>
        <ContentControl Content="{Binding Basics}"/>
        <ContentControl Content="{Binding AssetID}"/>
        <ContentControl Content="{Binding ShotType}"/>
        <ContentControl Content="{Binding AngleType}"/>
        <ContentControl Content="{Binding StartCorrectionFrame}"/>
        <ContentControl Content="{Binding InterpolationSettings}"/>
        <Expander Header="Focus &amp; Blur">
          <StackPanel Classes="form">
            <ContentControl Content="{Binding EnableDOF}"/>
            <StackPanel Classes="form" IsVisible="{Binding EnableDOF.Value}">
              <ContentControl Content="{Binding EnableCustomDOF}"/>
              <StackPanel Classes="form" IsVisible="{Binding EnableCustomDOF.Value}">
                <ContentControl Content="{Binding FocalDistance}"/>
                <ContentControl Content="{Binding NearBlurDistance}"/>
                <ContentControl Content="{Binding FarBlurDistance}"/>
                <ContentControl Content="{Binding BlurStrength}"/>
                <ContentControl Content="{Binding BlurType}" IsVisible="{c:Binding 'Size > 48'}"/>
              </StackPanel>
            </StackPanel>
          </StackPanel>
        </Expander>
        <Expander Header="Message Box Location" IsVisible="{c:Binding 'Size > 48'}">
          <StackPanel Classes="form">
            <ContentControl Content="{Binding EnableMessageCoordinates}"/>
            <ContentControl Content="{Binding MessageCoordinateType}" IsVisible="{Binding !EnableMessageCoordinates.Value}"/>
            <ContentControl Content="{Binding MessageX}" IsVisible="{Binding EnableMessageCoordinates.Value}"/>
            <ContentControl Content="{Binding MessageY}" IsVisible="{Binding EnableMessageCoordinates.Value}"/>
          </StackPanel>
        </Expander>
      </StackPanel>
    </DataTemplate>

    <DataTemplate DataType="{x:Type cmds:CMCn}">
      <StackPanel Classes="form">
        <TextBlock Classes="formtitle" Text="{Binding LongName}"/>
        <Separator Classes="formtitle"/>
        <ContentControl Content="{Binding Basics}"/>
        <ContentControl Content="{Binding DirectionType}"/>
        <ContentControl Content="{Binding Distance}"/>
      </StackPanel>
    </DataTemplate>

    <DataTemplate DataType="{x:Type cmds:CMD_}">
      <StackPanel Classes="form">
        <TextBlock Classes="formtitle" Text="{Binding LongName}"/>
        <Separator Classes="formtitle"/>
        <ContentControl Content="{Binding Basics}"/>
        <ContentControl Content="{Binding AngleOfView}"/>
        <Expander Header="Target Viewport Coordinates">
          <StackPanel Classes="form">
            <ContentControl Content="{Binding ViewportX}"/>
            <ContentControl Content="{Binding ViewportY}"/>
            <ContentControl Content="{Binding ViewportZ}"/>
          </StackPanel>
        </Expander>
        <Expander Header="Target Viewport Rotation">
          <StackPanel Classes="form">
            <ContentControl Content="{Binding ViewportYaw}"/>
            <ContentControl Content="{Binding ViewportPitch}"/>
            <ContentControl Content="{Binding ViewportRoll}"/>
          </StackPanel>
        </Expander>
        <ContentControl Content="{Binding InterpolationSettings}"/>
        <Expander Header="Focus &amp; Blur">
          <StackPanel Classes="form">
            <ContentControl Content="{Binding EnableDOF}"/>
            <StackPanel Classes="form" IsVisible="{Binding EnableDOF.Value}">
              <ContentControl Content="{Binding FocalDistance}"/>
              <ContentControl Content="{Binding NearBlurDistance}"/>
              <ContentControl Content="{Binding FarBlurDistance}"/>
              <ContentControl Content="{Binding BlurStrength}" IsVisible="{c:Binding 'Size > 48'}"/>
              <ContentControl Content="{Binding BlurType}" IsVisible="{c:Binding 'Size > 48'}"/>
            </StackPanel>
          </StackPanel>
        </Expander>
      </StackPanel>
    </DataTemplate>

    <DataTemplate DataType="{x:Type cmds:CQuk}">
      <StackPanel Classes="form">
        <TextBlock Classes="formtitle" Text="{Binding LongName}"/>
        <Separator Classes="formtitle"/>
        <ContentControl Content="{Binding Basics}"/>
        <ContentControl Content="{Binding StrengthOfShaking}"/>
        <ContentControl Content="{Binding DegreeOfPitch}"/>
        <ContentControl Content="{Binding FadeInFrames}"/>
        <ContentControl Content="{Binding FadeOutFrames}"/>
      </StackPanel>
    </DataTemplate>

    <DataTemplate DataType="{x:Type cmds:CSA_}">
      <StackPanel Classes="form">
        <TextBlock Classes="formtitle" Text="{Binding LongName}"/>
        <Separator Classes="formtitle"/>
        <ContentControl Content="{Binding Basics}"/>
        <ContentControl Content="{Binding AssetID}"/>
        <ContentControl Content="{Binding AnimationID}"/>
        <ContentControl Content="{Binding PlaybackSpeed}"/>
        <ContentControl Content="{Binding StartingFrame}"/>
        <ContentControl Content="{Binding LoopBool}"/>
        <ContentControl Content="{Binding EnableCorrectionParameters}"/>
        <Expander Header="Target Viewport Coordinates" IsVisible="{Binding EnableCorrectionParameters.Value}">
          <StackPanel Classes="form">
            <ContentControl Content="{Binding ViewportX}"/>
            <ContentControl Content="{Binding ViewportY}"/>
            <ContentControl Content="{Binding ViewportZ}"/>
          </StackPanel>
        </Expander>
        <Expander Header="Target Viewport Rotation" IsVisible="{Binding EnableCorrectionParameters.Value}">
          <StackPanel Classes="form">
            <ContentControl Content="{Binding ViewportYaw}"/>
            <ContentControl Content="{Binding ViewportPitch}"/>
            <ContentControl Content="{Binding ViewportRoll}"/>
          </StackPanel>
        </Expander>
        <Expander Header="Focus &amp; Blur" IsVisible="{c:Binding 'Size > 48'}">
          <StackPanel Classes="form">
            <ContentControl Content="{Binding EnableDOF}"/>
            <StackPanel Classes="form" IsVisible="{Binding EnableDOF.Value}">
              <ContentControl Content="{Binding FocalDistance}"/>
              <ContentControl Content="{Binding NearBlurDistance}"/>
              <ContentControl Content="{Binding FarBlurDistance}"/>
              <ContentControl Content="{Binding BlurStrength}"/>
              <ContentControl Content="{Binding BlurType}"/>
            </StackPanel>
          </StackPanel>
        </Expander>
        <Expander Header="Message Box Location" IsVisible="{c:Binding 'Size > 48'}">
          <StackPanel Classes="form">
            <ContentControl Content="{Binding EnableMessageCoordinates}"/>
            <ContentControl Content="{Binding MessageCoordinateType}" IsVisible="{Binding !EnableMessageCoordinates.Value}"/>
            <ContentControl Content="{Binding MessageX}" IsVisible="{Binding EnableMessageCoordinates.Value}"/>
            <ContentControl Content="{Binding MessageY}" IsVisible="{Binding EnableMessageCoordinates.Value}"/>
          </StackPanel>
        </Expander>
        <Expander Header="Unknown" IsVisible="{c:Binding 'Size > 80'}">
          <StackPanel Classes="form">
            <ContentControl Content="{Binding UnkBool}"/>
            <ContentControl Content="{Binding UnkEnum}"/>
            <ContentControl Content="{Binding UnkInd}"/>
          </StackPanel>
        </Expander>
      </StackPanel>
    </DataTemplate>

    <DataTemplate DataType="{x:Type cmds:CSD_}">
      <StackPanel Classes="form">
        <TextBlock Classes="formtitle" Text="{Binding LongName}"/>
        <Separator Classes="formtitle"/>
        <ContentControl Content="{Binding Basics}"/>
        <ContentControl Content="{Binding AngleOfView}"/>
        <Expander Header="Target Viewport Coordinates">
          <StackPanel Classes="form">
            <ContentControl Content="{Binding ViewportX}"/>
            <ContentControl Content="{Binding ViewportY}"/>
            <ContentControl Content="{Binding ViewportZ}"/>
          </StackPanel>
        </Expander>
        <Expander Header="Target Viewport Rotation">
          <StackPanel Classes="form">
            <ContentControl Content="{Binding ViewportYaw}"/>
            <ContentControl Content="{Binding ViewportPitch}"/>
            <ContentControl Content="{Binding ViewportRoll}"/>
          </StackPanel>
        </Expander>
        <Expander Header="Focus &amp; Blur" IsVisible="{c:Binding 'Size > 32'}">
          <StackPanel Classes="form">
            <ContentControl Content="{Binding EnableDOF}"/>
            <StackPanel Classes="form" IsVisible="{Binding EnableDOF.Value}">
              <ContentControl Content="{Binding FocalDistance}"/>
              <ContentControl Content="{Binding NearBlurDistance}"/>
              <ContentControl Content="{Binding FarBlurDistance}"/>
              <ContentControl Content="{Binding BlurStrength}"/>
              <ContentControl Content="{Binding BlurType}" IsVisible="{c:Binding 'Size > 48'}"/>
            </StackPanel>
          </StackPanel>
        </Expander>
        <Expander Header="Message Box Location" IsVisible="{c:Binding 'Size > 48'}">
          <StackPanel Classes="form">
            <ContentControl Content="{Binding EnableMessageCoordinates}"/>
            <ContentControl Content="{Binding MessageCoordinateType}" IsVisible="{Binding !EnableMessageCoordinates.Value}"/>
            <ContentControl Content="{Binding MessageX}" IsVisible="{Binding EnableMessageCoordinates.Value}"/>
            <ContentControl Content="{Binding MessageY}" IsVisible="{Binding EnableMessageCoordinates.Value}"/>
          </StackPanel>
        </Expander>
        <Expander Header="Unknown" IsVisible="{c:Binding 'Size > 64'}">
          <StackPanel Classes="form">
            <ContentControl Content="{Binding UnkBool}"/>
            <ContentControl Content="{Binding UnkEnum}"/>
            <ContentControl Content="{Binding UnkInd}"/>
            <ContentControl Content="{Binding SuperUnk1}"/>
            <ContentControl Content="{Binding SuperUnk2}"/>
            <ContentControl Content="{Binding UnkCoord1}"/>
            <ContentControl Content="{Binding UnkCoord2}"/>
            <ContentControl Content="{Binding UnkCoord3}"/>
          </StackPanel>
        </Expander>
      </StackPanel>
    </DataTemplate>

    <DataTemplate DataType="{x:Type cmds:CSDD}">
      <StackPanel Classes="form">
        <TextBlock Classes="formtitle" Text="{Binding LongName}"/>
        <Separator Classes="formtitle"/>
        <ContentControl Content="{Binding Basics}"/>
        <ContentControl Content="{Binding AngleOfView}"/>
        <Expander Header="Target Viewport Coordinates">
          <StackPanel Classes="form">
            <ContentControl Content="{Binding ViewportX}"/>
            <ContentControl Content="{Binding ViewportY}"/>
            <ContentControl Content="{Binding ViewportZ}"/>
          </StackPanel>
        </Expander>
        <Expander Header="Target Viewport Rotation">
          <StackPanel Classes="form">
            <ContentControl Content="{Binding ViewportYaw}"/>
            <ContentControl Content="{Binding ViewportPitch}"/>
            <ContentControl Content="{Binding ViewportRoll}"/>
          </StackPanel>
        </Expander>
        <Expander Header="Focus &amp; Blur">
          <StackPanel Classes="form">
            <ContentControl Content="{Binding EnableDOF}"/>
            <StackPanel Classes="form" IsVisible="{Binding EnableDOF.Value}">
              <ContentControl Content="{Binding FocalDistance}"/>
              <ContentControl Content="{Binding NearBlurDistance}"/>
              <ContentControl Content="{Binding FarBlurDistance}"/>
              <ContentControl Content="{Binding BlurStrength}"/>
            </StackPanel>
          </StackPanel>
        </Expander>
        <Expander Header="Unknown">
          <StackPanel Classes="form">
            <ContentControl Content="{Binding UnkBool}"/>
          </StackPanel>
        </Expander>
      </StackPanel>
    </DataTemplate>

    <DataTemplate DataType="{x:Type cmds:CSEc}">
      <StackPanel Classes="form">
        <TextBlock Classes="formtitle" Text="{Binding LongName}"/>
        <Separator Classes="formtitle"/>
        <ContentControl Content="{Binding Basics}"/>
        <ContentControl Content="{Binding AssetID}"/>
        <ContentControl Content="{Binding EnableEditing}"/>
        <Expander Header="Message Box Location" IsVisible="{Binding EnableEditing.Value}">
          <StackPanel Classes="form">
            <ContentControl Content="{Binding EnableMessageCoordinates}"/>
            <StackPanel Classes="form" IsVisible="{Binding !EnableMessageCoordinates.Value}">
              <ContentControl Content="{Binding EnableMessageTypes}"/>
              <ContentControl Content="{Binding MessageCoordinateType}" IsVisible="{Binding EnableMessageTypes.Value}"/>
            </StackPanel>
            <StackPanel Classes="form" IsVisible="{Binding EnableMessageCoordinates.Value}">
              <ContentControl Content="{Binding MessageX}"/>
              <ContentControl Content="{Binding MessageY}"/>
            </StackPanel>
          </StackPanel>
        </Expander>
        <Expander Header="Unknown">
          <StackPanel Classes="form">
            <ContentControl Content="{Binding UnkBool1}"/>
            <ContentControl Content="{Binding UnkBool2}"/>
            <ContentControl Content="{Binding UnkBool3}"/>
            <ContentControl Content="{Binding UnkEnum}"/>
          </StackPanel>
        </Expander>
      </StackPanel>
    </DataTemplate>

    <DataTemplate DataType="{x:Type cmds:CShk}">
      <StackPanel Classes="form">
        <TextBlock Classes="formtitle" Text="{Binding LongName}"/>
        <Separator Classes="formtitle"/>
        <ContentControl Content="{Binding Basics}"/>
        <ContentControl Content="{Binding ActionType}"/>
        <StackPanel Classes="form" IsVisible="{c:Binding 'ActionType.Choice == \'Shaking On\''}">
          <ContentControl Content="{Binding ShakingType}"/>
          <ContentControl Content="{Binding Magnitude}"/>
          <ContentControl Content="{Binding Speed}"/>
        </StackPanel>
      </StackPanel>
    </DataTemplate>

    <DataTemplate DataType="{x:Type cmds:CSk_}">
      <StackPanel Classes="form">
        <TextBlock Classes="formtitle" Text="{Binding LongName}"/>
        <Separator Classes="formtitle"/>
        <ContentControl Content="{Binding Basics}"/>
        <ContentControl Content="{Binding VibrationType}"/>
      </StackPanel>
    </DataTemplate>

    <DataTemplate DataType="{x:Type cmds:FAA_}">
      <StackPanel Classes="form">
        <TextBlock Classes="formtitle" Text="{Binding LongName}"/>
        <Separator Classes="formtitle"/>
        <ContentControl Content="{Binding Basics}"/>
        <ContentControl Content="{Binding AssetID}"/>
        <ContentControl Content="{Binding ObjectIndex}"/>
        <ContentControl Content="{Binding FirstAnimation}"/>
        <ContentControl Content="{Binding SecondAnimation}"/>
        <Expander Header="Debug">
          <StackPanel Classes="form">
            <ContentControl Content="{Binding DebugFrameForward}"/>
          </StackPanel>
        </Expander>
      </StackPanel>
    </DataTemplate>

    <DataTemplate DataType="{x:Type cmds:FrJ_}">
      <StackPanel Classes="form">
        <TextBlock Classes="formtitle" Text="{Binding LongName}"/>
        <Separator Classes="formtitle"/>
        <ContentControl Content="{Binding Basics}"/>
        <ContentControl Content="{Binding FrameIndex}"/>
      </StackPanel>
    </DataTemplate>

    <DataTemplate DataType="{x:Type cmds:MAA_}">
      <StackPanel Classes="form">
        <TextBlock Classes="formtitle" Text="{Binding LongName}"/>
        <Separator Classes="formtitle"/>
        <ContentControl Content="{Binding Basics}"/>
        <ContentControl Content="{Binding AssetID}"/>
        <ContentControl Content="{Binding TrackNumber}"/>
        <ContentControl Content="{Binding AddAnimation}"/>
        <Expander Header="Debug">
          <StackPanel Classes="form">
            <ContentControl Content="{Binding DebugFrameForward}"/>
          </StackPanel>
        </Expander>
      </StackPanel>
    </DataTemplate>

    <DataTemplate DataType="{x:Type cmds:MAAB}">
      <StackPanel Classes="form">
        <TextBlock Classes="formtitle" Text="{Binding LongName}"/>
        <Separator Classes="formtitle"/>
        <ContentControl Content="{Binding Basics}"/>
        <ContentControl Content="{Binding AssetID}"/>
        <ContentControl Content="{Binding ChildAssetID}"/>
        <ContentControl Content="{Binding FirstAnimation}"/>
        <ContentControl Content="{Binding SecondAnimation}"/>
      </StackPanel>
    </DataTemplate>

    <DataTemplate DataType="{x:Type cmds:MAB_}">
      <StackPanel Classes="form">
        <TextBlock Classes="formtitle" Text="{Binding LongName}"/>
        <Separator Classes="formtitle"/>
        <ContentControl Content="{Binding Basics}"/>
        <ContentControl Content="{Binding AssetID}"/>
        <ContentControl Content="{Binding StartWaitingFrames}"/>
        <ContentControl Content="{Binding FirstAnimation}"/>
        <ContentControl Content="{Binding SecondAnimation}"/>
        <Expander Header="Debug">
          <StackPanel Classes="form">
            <ContentControl Content="{Binding DebugUnkBool}"/>
            <ContentControl Content="{Binding DebugFrameForward}"/>
          </StackPanel>
        </Expander>
        <Expander Header="Unknown">
          <StackPanel Classes="form">
            <ContentControl Content="{Binding FirstAnimationUnk}"/>
            <ContentControl Content="{Binding SecondAnimationUnk}"/>
            <ContentControl Content="{Binding UnkBool1}"/>
            <ContentControl Content="{Binding UnkBool2}"/>
            <ContentControl Content="{Binding UnkBool3}"/>
            <ContentControl Content="{Binding UnkBool4}"/>
            <ContentControl Content="{Binding UnkBool5}"/>
            <ContentControl Content="{Binding UnkBool6}"/>
            <ContentControl Content="{Binding UnkBool7}"/>
          </StackPanel>
        </Expander>
      </StackPanel>
    </DataTemplate>

    <DataTemplate DataType="{x:Type cmds:MAI_}">
      <StackPanel Classes="form">
        <TextBlock Classes="formtitle" Text="{Binding LongName}"/>
        <Separator Classes="formtitle"/>
        <ContentControl Content="{Binding Basics}"/>
        <ContentControl Content="{Binding AssetID}"/>
        <ItemsControl ItemsSource="{Binding Animations}">
        </ItemsControl>
      </StackPanel>
    </DataTemplate>

    <DataTemplate DataType="{x:Type cmds:MAlp}">
      <StackPanel Classes="form">
        <TextBlock Classes="formtitle" Text="{Binding LongName}"/>
        <Separator Classes="formtitle"/>
        <ContentControl Content="{Binding Basics}"/>
        <ContentControl Content="{Binding AssetID}"/>
        <ContentControl Content="{Binding AlphaLevel}"/>
        <ContentControl Content="{Binding TranslucentMode}"/>
        <ContentControl Content="{Binding InterpolationSettings}"/>
      </StackPanel>
    </DataTemplate>

    <DataTemplate DataType="{x:Type cmds:MAt_}">
      <StackPanel Classes="form">
        <TextBlock Classes="formtitle" Text="{Binding LongName}"/>
        <Separator Classes="formtitle"/>
        <ContentControl Content="{Binding Basics}"/>
        <StackPanel Classes="preview">
          <ContentControl Content="{Binding AssetID}"/>
          <ContentControl Content="{Binding ParentModelPreviewVM}"/>
        </StackPanel>
        <ContentControl Content="{Binding HelperID}"/>
        <StackPanel Classes="preview">
          <ContentControl Content="{Binding ChildAssetID}"/>
          <ContentControl Content="{Binding ChildModelPreviewVM}"/>
        </StackPanel>
        <Expander Header="Offset (From Attachment Point)">
          <StackPanel Classes="form">
            <ContentControl Content="{Binding XOffset}"/>
            <ContentControl Content="{Binding YOffset}"/>
            <ContentControl Content="{Binding ZOffset}"/>
          </StackPanel>
        </Expander>
        <Expander Header="Rotation (Degrees)">
          <StackPanel Classes="form">
            <ContentControl Content="{Binding Yaw}"/>
            <ContentControl Content="{Binding Pitch}"/>
            <ContentControl Content="{Binding Roll}"/>
          </StackPanel>
        </Expander>
        <Expander Header="Unknown">
          <StackPanel Classes="form">
            <ContentControl Content="{Binding UnkBool}"/>
          </StackPanel>
        </Expander>
      </StackPanel>
    </DataTemplate>

    <DataTemplate DataType="{x:Type cmds:MAtO}">
      <StackPanel Classes="form">
        <TextBlock Classes="formtitle" Text="{Binding LongName}"/>
        <Separator Classes="formtitle"/>
        <ContentControl Content="{Binding Basics}"/>
        <StackPanel Classes="preview">
          <ContentControl Content="{Binding AssetID}"/>
          <ContentControl Content="{Binding ParentModelPreviewVM}"/>
        </StackPanel>
        <StackPanel Classes="preview">
          <ContentControl Content="{Binding ChildAssetID}"/>
          <ContentControl Content="{Binding ChildModelPreviewVM}"/>
        </StackPanel>
        <ContentControl Content="{Binding InterpolationType}"/>
        <Expander Header="Offset (From Attachment Point)">
          <StackPanel Classes="form">
            <ContentControl Content="{Binding XOffset}"/>
            <ContentControl Content="{Binding YOffset}"/>
            <ContentControl Content="{Binding ZOffset}"/>
          </StackPanel>
        </Expander>
        <Expander Header="Rotation (Degrees)">
          <StackPanel Classes="form">
            <ContentControl Content="{Binding Yaw}"/>
            <ContentControl Content="{Binding Pitch}"/>
            <ContentControl Content="{Binding Roll}"/>
          </StackPanel>
        </Expander>
      </StackPanel>
    </DataTemplate>

    <DataTemplate DataType="{x:Type cmds:MCSd}">
      <StackPanel Classes="form">
        <TextBlock Classes="formtitle" Text="{Binding LongName}"/>
        <Separator Classes="formtitle"/>
        <ContentControl Content="{Binding Basics}"/>
        <ContentControl Content="{Binding AssetID}"/>
        <ContentControl Content="{Binding Enabled}"/>
        <Expander Header="Inner Circle" IsVisible="{Binding Enabled.Value}">
          <StackPanel Classes="form">
            <ContentControl Content="{Binding InnerCircleColor}"/>
            <ContentControl Content="{Binding InnerCircleDiameter}"/>
          </StackPanel>
        </Expander>
        <Expander Header="Outer Circle" IsVisible="{Binding Enabled.Value}">
          <StackPanel Classes="form">
            <ContentControl Content="{Binding OuterCircleColor}"/>
            <ContentControl Content="{Binding OuterCircleDiameter}"/>
          </StackPanel>
        </Expander>
        <Expander Header="Unknown">
          <StackPanel Classes="form">
            <ContentControl Content="{Binding UnkBool}"/>
          </StackPanel>
        </Expander>
      </StackPanel>
    </DataTemplate>

    <DataTemplate DataType="{x:Type cmds:MDt_}">
      <StackPanel Classes="form">
        <TextBlock Classes="formtitle" Text="{Binding LongName}"/>
        <Separator Classes="formtitle"/>
        <ContentControl Content="{Binding Basics}"/>
        <StackPanel Classes="preview">
          <ContentControl Content="{Binding AssetID}"/>
          <ContentControl Content="{Binding ParentModelPreviewVM}"/>
        </StackPanel>
        <ContentControl Content="{Binding HelperID}"/>
        <StackPanel Classes="preview">
          <ContentControl Content="{Binding ChildAssetID}"/>
          <ContentControl Content="{Binding ChildModelPreviewVM}"/>
        </StackPanel>
        <ContentControl Content="{Binding RemainInScene}"/>
        <Expander Header="Detached Position" IsVisible="{Binding RemainInScene.Value}">
          <StackPanel Classes="form">
            <ContentControl Content="{Binding X}"/>
            <ContentControl Content="{Binding Y}"/>
            <ContentControl Content="{Binding Z}"/>
          </StackPanel>
        </Expander>
        <Expander Header="Detached Rotation (Degrees)" IsVisible="{Binding RemainInScene.Value}">
          <StackPanel Classes="form">
            <ContentControl Content="{Binding Yaw}"/>
            <ContentControl Content="{Binding Pitch}"/>
            <ContentControl Content="{Binding Roll}"/>
          </StackPanel>
        </Expander>
        <Expander Header="Unknown">
          <StackPanel Classes="form">
            <ContentControl Content="{Binding UnkBool}"/>
          </StackPanel>
        </Expander>
      </StackPanel>
    </DataTemplate>

    <DataTemplate DataType="{x:Type cmds:MFts}">
      <StackPanel Classes="form">
        <TextBlock Classes="formtitle" Text="{Binding LongName}"/>
        <Separator Classes="formtitle"/>
        <ContentControl Content="{Binding Basics}"/>
        <ContentControl Content="{Binding AssetID}"/>
        <ContentControl Content="{Binding Enable}"/>
        <ContentControl Content="{Binding AreaDistortion}" IsVisible="{Binding Enable.Value}"/>
        <ContentControl Content="{Binding PuddleEffect}" IsVisible="{Binding Enable.Value}"/>
      </StackPanel>
    </DataTemplate>

    <DataTemplate DataType="{x:Type cmds:MIc_}">
      <StackPanel Classes="form">
        <TextBlock Classes="formtitle" Text="{Binding LongName}"/>
        <Separator Classes="formtitle"/>
        <ContentControl Content="{Binding Basics}"/>
        <ContentControl Content="{Binding AssetID}"/>
        <ContentControl Content="{Binding IconType}"/>
        <ContentControl Content="{Binding IconSize}"/>
      </StackPanel>
    </DataTemplate>

    <DataTemplate DataType="{x:Type cmds:ML__}">
      <StackPanel Classes="form">
        <TextBlock Classes="formtitle" Text="{Binding LongName}"/>
        <Separator Classes="formtitle"/>
        <ContentControl Content="{Binding Basics}"/>
        <ContentControl Content="{Binding AssetID}"/>
        <ContentControl Content="{Binding Enabled}"/>
        <Expander Header="Color" IsVisible="{Binding Enabled.Value}">
          <StackPanel Classes="form">
            <ContentControl Content="{Binding AmbientColor}"/>
            <ContentControl Content="{Binding DiffuseColor}"/>
            <ContentControl Content="{Binding SpecularColor}"/>
          </StackPanel>
        </Expander>
        <Expander Header="Direction (Degrees)" IsVisible="{Binding Enabled.Value}">
          <StackPanel Classes="form">
            <ContentControl Content="{Binding AzimuthDegrees}"/>
            <ContentControl Content="{Binding ElevationDegrees}"/>
          </StackPanel>
        </Expander>
      </StackPanel>
    </DataTemplate>

    <DataTemplate DataType="{x:Type cmds:MLa_}">
      <StackPanel Classes="form">
        <TextBlock Classes="formtitle" Text="{Binding LongName}"/>
        <Separator Classes="formtitle"/>
        <ContentControl Content="{Binding Basics}"/>
        <ContentControl Content="{Binding AssetID}"/>
        <ContentControl Content="{Binding ResetEyes}"/>
        <ContentControl Content="{Binding MotionType}"/>
        <ContentControl Content="{Binding SpeedType}"/>
        <Expander Header="Look-At Motion" IsVisible="{c:Binding 'MotionType.Choice == \'Look-At\''}">
          <StackPanel Classes="form">
            <ContentControl Content="{Binding EyeMovementEnabled}"/>
            <ContentControl Content="{Binding HeadMovementEnabled}"/>
            <ContentControl Content="{Binding TorsoMovementEnabled}"/>
            <ContentControl Content="{Binding SlowTorsoMovement}" IsVisible="{Binding TorsoMovementEnabled.Value}"/>
            <ContentControl Content="{Binding TargetType}"/>
            <Expander Header="Target Coordinates" IsVisible="{c:Binding 'TargetType.Choice == \'Coordinates\''}">
              <StackPanel Classes="form">
                <ContentControl Content="{Binding X}"/>
                <ContentControl Content="{Binding Y}"/>
                <ContentControl Content="{Binding Z}"/>
              </StackPanel>
            </Expander>
            <Expander Header="Target Model" IsVisible="{c:Binding 'TargetType.Choice == \'Model\''}">
              <StackPanel Classes="form">
                <ContentControl Content="{Binding TargetModelID}"/>
                <ContentControl Content="{Binding TargetHelperID}"/>
              </StackPanel>
            </Expander>
          </StackPanel>
        </Expander>
        <Expander Header="Unknown">
          <StackPanel Classes="form">
            <ContentControl Content="{Binding UnkBool}"/>
          </StackPanel>
        </Expander>
      </StackPanel>
    </DataTemplate>

    <DataTemplate DataType="{x:Type cmds:MLd_}">
      <StackPanel Classes="form">
        <TextBlock Classes="formtitle" Text="{Binding LongName}"/>
        <Separator Classes="formtitle"/>
        <ContentControl Content="{Binding Basics}"/>
        <ContentControl Content="{Binding AssetID}"/>
      </StackPanel>
    </DataTemplate>

    <DataTemplate DataType="{x:Type cmds:MLw_}">
      <StackPanel Classes="form">
        <TextBlock Classes="formtitle" Text="{Binding LongName}"/>
        <Separator Classes="formtitle"/>
        <ContentControl Content="{Binding Basics}"/>
        <ContentControl Content="{Binding AssetID}"/>
        <ContentControl Content="{Binding EnableUpperBodyRotation}"/>
        <Expander Header="Limit Angles (Degrees)">
          <StackPanel Classes="form">
            <ContentControl Content="{Binding TopLimitDegrees}"/>
            <ContentControl Content="{Binding BottomLimitDegrees}"/>
            <ContentControl Content="{Binding LeftLimitDegrees}"/>
            <ContentControl Content="{Binding RightLimitDegrees}"/>
          </StackPanel>
        </Expander>
        <Expander Header="Update Interval">
          <StackPanel Classes="form">
            <ContentControl Content="{Binding UpdateIntervalMinimumFrames}"/>
            <ContentControl Content="{Binding UpdateIntervalRandomFrames}"/>
          </StackPanel>
        </Expander>
      </StackPanel>
    </DataTemplate>

    <DataTemplate DataType="{x:Type cmds:MMD_}">
      <StackPanel Classes="form">
        <TextBlock Classes="formtitle" Text="{Binding LongName}"/>
        <Separator Classes="formtitle"/>
        <ContentControl Content="{Binding Basics}"/>
        <ContentControl Content="{Binding AssetID}"/>
        <Expander Header="Movement">
          <StackPanel Classes="form">
            <ContentControl Content="{Binding DisableOrientationChange}"/>
            <ContentControl Content="{Binding MovementLoopBool}"/>
            <ContentControl Content="{Binding InterpolationType}"/>
            <ContentControl Content="{Binding StartSpeedType}"/>
            <ContentControl Content="{Binding FinalSpeedType}"/>
            <ContentControl Content="{Binding MovementSpeed}"/>
            <ContentControl Content="{Binding NumControlGroups}"/>
            <ItemsControl ItemsSource="{Binding Targets}">
              <ItemsControl.ItemTemplate>
                <DataTemplate>
                  <StackPanel Classes="form" IsVisible="{Binding IsActive}" Margin="0 10 0 0">
                    <Expander Header="{Binding Name}">
                      <StackPanel Classes="form">
                        <ContentControl Content="{Binding X}"/>
                        <ContentControl Content="{Binding Y}"/>
                        <ContentControl Content="{Binding Z}"/>
                      </StackPanel>
                    </Expander>
                  </StackPanel>
                </DataTemplate>
              </ItemsControl.ItemTemplate>
            </ItemsControl>
          </StackPanel>
        </Expander>
        <ContentControl Content="{Binding MovingAnimation}"/>
        <ContentControl Content="{Binding WaitingAnimation}"/>
        <Expander Header="Unknown">
          <StackPanel Classes="form">
            <ContentControl Content="{Binding Unk}"/>
          </StackPanel>
        </Expander>
      </StackPanel>
    </DataTemplate>

    <DataTemplate DataType="{x:Type cmds:MRgs}">
      <StackPanel Classes="form">
        <TextBlock Classes="formtitle" Text="{Binding LongName}"/>
        <Separator Classes="formtitle"/>
        <ContentControl Content="{Binding Basics}"/>
        <ContentControl Content="{Binding AssetID}"/>
        <ContentControl Content="{Binding Display}"/>
        <ContentControl Content="{Binding Scene}"/>
      </StackPanel>
    </DataTemplate>

    <DataTemplate DataType="{x:Type cmds:MRot}">
      <StackPanel Classes="form">
        <TextBlock Classes="formtitle" Text="{Binding LongName}"/>
        <Separator Classes="formtitle"/>
        <ContentControl Content="{Binding Basics}"/>
        <ContentControl Content="{Binding AssetID}"/>
        <Expander Header="Rotation (Degrees)">
          <StackPanel Classes="form">
            <ContentControl Content="{Binding InterpolationType}"/>
            <ContentControl Content="{Binding YawEnabled}"/>
            <ContentControl Content="{Binding YawDegrees}" IsVisible="{Binding YawEnabled.Value}"/>
            <ContentControl Content="{Binding PitchEnabled}"/>
            <ContentControl Content="{Binding PitchDegrees}" IsVisible="{Binding PitchEnabled.Value}"/>
            <ContentControl Content="{Binding RollEnabled}"/>
            <ContentControl Content="{Binding RollDegrees}" IsVisible="{Binding RollEnabled.Value}"/>
            <ContentControl Content="{Binding CustomRotationAnimationsEnabled}"/>
          </StackPanel>
        </Expander>
        <ContentControl Content="{Binding RotatingAnimation}" IsVisible="{Binding CustomRotationAnimationsEnabled.Value}"/>
        <ContentControl Content="{Binding WaitingAnimation}" IsVisible="{Binding CustomRotationAnimationsEnabled.Value}"/>
        <Expander Header="Unknown">
          <StackPanel Classes="form">
            <ContentControl Content="{Binding Unk}"/>
          </StackPanel>
        </Expander>
      </StackPanel>
    </DataTemplate>

    <DataTemplate DataType="{x:Type cmds:MScl}">
      <StackPanel Classes="form">
        <TextBlock Classes="formtitle" Text="{Binding LongName}"/>
        <Separator Classes="formtitle"/>
        <ContentControl Content="{Binding Basics}"/>
        <ContentControl Content="{Binding AssetID}"/>
        <ContentControl Content="{Binding Scale}"/>
      </StackPanel>
    </DataTemplate>

    <DataTemplate DataType="{x:Type cmds:MSD_}">
      <StackPanel Classes="form">
        <TextBlock Classes="formtitle" Text="{Binding LongName}"/>
        <Separator Classes="formtitle"/>
        <ContentControl Content="{Binding Basics}"/>
        <StackPanel Classes="preview">
          <ContentControl Content="{Binding AssetID}"/>
          <ContentControl Content="{Binding ModelPreviewVM}"/>
        </StackPanel>
        <Expander Header="Position">
          <StackPanel Classes="form">
            <ContentControl Content="{Binding X}"/>
            <ContentControl Content="{Binding Y}"/>
            <ContentControl Content="{Binding Z}"/>
          </StackPanel>
        </Expander>
        <Expander Header="Rotation (Degrees)">
          <StackPanel Classes="form">
            <ContentControl Content="{Binding RotationEnabled}"/>
            <StackPanel Classes="form" IsVisible="{Binding RotationEnabled.Value}">
              <ContentControl Content="{Binding YawDegrees}"/>
              <ContentControl Content="{Binding PitchDegrees}"/>
              <ContentControl Content="{Binding RollDegrees}"/>
            </StackPanel>
          </StackPanel>
        </Expander>
        <ContentControl Content="{Binding WaitingAnimation}"/>
      </StackPanel>
    </DataTemplate>

    <DataTemplate DataType="{x:Type cmds:MSSs}">
      <StackPanel Classes="form">
        <TextBlock Classes="formtitle" Text="{Binding LongName}"/>
        <Separator Classes="formtitle"/>
        <ContentControl Content="{Binding Basics}"/>
        <ContentControl Content="{Binding AssetID}"/>
        <ContentControl Content="{Binding ShoeLayer}"/>
      </StackPanel>
    </DataTemplate>

    <DataTemplate DataType="{x:Type cmds:Msg_}">
      <StackPanel Classes="form">
        <TextBlock Classes="formtitle" Text="{Binding LongName}"/>
        <Separator Classes="formtitle"/>
        <ContentControl Content="{Binding Basics}"/>
        <ContentControl Content="{Binding IsSubtitle}"/>
        <Separator Classes="formsubtitle"/>
        <ContentControl Content="{Binding HasMessage}"/>
        <ContentControl Content="{Binding MessageID}" IsVisible="{Binding HasMessage.Value}"/>
        <ContentControl Content="{Binding MessageBlock}" IsVisible="{Binding HasMessage.Value}"/>
        <Separator Classes="formsubtitle"/>
        <ContentControl Content="{Binding HasSelection}"/>
        <ContentControl Content="{Binding SelectionID}" IsVisible="{Binding HasSelection.Value}"/>
        <ContentControl Content="{Binding SelectionBlock}" IsVisible="{Binding HasSelection.Value}"/>
      </StackPanel>
    </DataTemplate>

    <DataTemplate DataType="{x:Type cmds:MsgR}">
      <StackPanel Classes="form">
        <TextBlock Classes="formtitle" Text="{Binding LongName}"/>
        <Separator Classes="formtitle"/>
        <ContentControl Content="{Binding Basics}"/>
        <ContentControl Content="{Binding IsSubtitle}"/>
        <Separator Classes="formsubtitle"/>
        <ContentControl Content="{Binding HasMessage}"/>
        <ContentControl Content="{Binding MessageID}" IsVisible="{Binding HasMessage.Value}"/>
        <ContentControl Content="{Binding MessageBlock}" IsVisible="{Binding HasMessage.Value}"/>
        <Separator Classes="formsubtitle"/>
        <ContentControl Content="{Binding HasSelection}"/>
        <ContentControl Content="{Binding SelectionID}" IsVisible="{Binding HasSelection.Value}"/>
        <ContentControl Content="{Binding SelectionBlock}" IsVisible="{Binding HasSelection.Value}"/>
      </StackPanel>
    </DataTemplate>

    <DataTemplate DataType="{x:Type cmds:MessagePreview}">
      <Expander Header="Message Details">
        <StackPanel Classes="form">
          <ContentControl Content="{Binding MessageType}"/>
          <ContentControl Content="{Binding Speaker}"/>
          <ItemsControl ItemsSource="{Binding Pages}">
            <ItemsControl.ItemTemplate>
              <DataTemplate>
                <StackPanel Classes="preview">
                  <ContentControl Content="{Binding Dialogue}" Margin="0,5,0,5"/>
                  <Button Click="PlayVoiceTrack" ToolTip.Tip="Play/Pause Selected Track" IsVisible="{Binding HasVoiceLine}">
                    <PathIcon Data="{StaticResource video_play_pause_regular}" />
                  </Button>
                </StackPanel>
              </DataTemplate>
            </ItemsControl.ItemTemplate>
          </ItemsControl>
        </StackPanel>
      </Expander>
    </DataTemplate>

    <DataTemplate DataType="{x:Type cmds:SelectionPreview}">
      <Expander Header="Selection Details">
        <StackPanel Classes="form">
          <ItemsControl ItemsSource="{Binding Options}">
            <ItemsControl.ItemTemplate>
              <DataTemplate>
                <ContentControl Content="{Binding Dialogue}" Margin="0,5,0,5"/>
              </DataTemplate>
            </ItemsControl.ItemTemplate>
          </ItemsControl>
        </StackPanel>
      </Expander>
    </DataTemplate>

    <DataTemplate DataType="{x:Type cmds:Scr_}">
      <StackPanel Classes="form">
        <TextBlock Classes="formtitle" Text="{Binding LongName}"/>
        <Separator Classes="formtitle"/>
        <ContentControl Content="{Binding Basics}"/>
        <ContentControl Content="{Binding ProcedureIndex}"/>
      </StackPanel>
    </DataTemplate>

    <DataTemplate DataType="{x:Type cmds:SBE_}">
      <StackPanel Classes="form">
        <TextBlock Classes="formtitle" Text="{Binding LongName}"/>
        <Separator Classes="formtitle"/>
        <ContentControl Content="{Binding Basics}"/>
        <ContentControl Content="{Binding CueID}"/>
        <ContentControl Content="{Binding Action}"/>
        <ContentControl Content="{Binding Enable}"/>
      </StackPanel>
    </DataTemplate>

    <DataTemplate DataType="{x:Type cmds:SBEA}">
      <StackPanel Classes="form">
        <TextBlock Classes="formtitle" Text="{Binding LongName}"/>
        <Separator Classes="formtitle"/>
        <ContentControl Content="{Binding Basics}"/>
        <ContentControl Content="{Binding Action}"/>
      </StackPanel>
    </DataTemplate>

    <DataTemplate DataType="{x:Type cmds:SFts}">
      <StackPanel Classes="form">
        <TextBlock Classes="formtitle" Text="{Binding LongName}"/>
        <Separator Classes="formtitle"/>
        <ContentControl Content="{Binding Basics}"/>
        <ContentControl Content="{Binding AssetID}"/>
        <ContentControl Content="{Binding Enable}"/>
      </StackPanel>
    </DataTemplate>

    <DataTemplate DataType="{x:Type cmds:Snd_}">
      <StackPanel Classes="form">
        <TextBlock Classes="formtitle" Text="{Binding LongName}"/>
        <Separator Classes="formtitle"/>
        <ContentControl Content="{Binding Basics}"/>
        <ContentControl Content="{Binding Action}"/>
        <ContentControl Content="{Binding Source}"/>
        <ContentControl Content="{Binding FadeDuration}"/>
        <ContentControl Content="{Binding Channel}" IsVisible="{Binding IsPlayCmd}"/>
        <StackPanel Classes="preview" IsVisible="{Binding IsPlayCmd}">
          <ContentControl Content="{Binding CueID}"/>
          <Button Click="PlaySFXTrack" ToolTip.Tip="Play/Pause Selected Track">
            <PathIcon Data="{StaticResource video_play_pause_regular}" />
          </Button>
        </StackPanel>
      </StackPanel>
    </DataTemplate>

    <DataTemplate DataType="{x:Type cmds:Generic}">
      <StackPanel Classes="form">
        <TextBlock Classes="formtitle" Text="{Binding LongName}"/>
        <Separator Classes="formtitle"/>
        <ContentControl Content="{Binding Basics}"/>
        <TextBlock Classes="placeholder" Text="(Not yet implemented.)"
         HorizontalAlignment="Center"/>
      </StackPanel>
    </DataTemplate>

  </UserControl.DataTemplates>

<Grid>
  <DockPanel DataContext="{Binding TimelineContent}">
    <DockPanel DockPanel.Dock="Top">
      <StackPanel Orientation="Horizontal" DockPanel.Dock="Left">
        <Button Classes="accented" Click="ShowAllCategories" CornerRadius="5,0,0,5">
          Show All
        </Button>
        <Button Click="HideAllCategories" CornerRadius="0,5,5,0">Hide All</Button>
      </StackPanel>
      <StackPanel Classes="field" DockPanel.Dock="Right">
        <Slider
         Minimum="0"
         Maximum="{c:Binding FrameCount-1}"
         TickFrequency="1" IsSnapToTickEnabled="true"
         Value="{Binding ActiveFrame}"
         Width="200"/>
        <NumericUpDown ValueChanged="JumpToFrame"
         Minimum="0"
         Maximum="{c:Binding FrameCount-1}"
         Increment="1"
         Value="{Binding ActiveFrame}"
         AllowSpin="true"
         VerticalAlignment="Center"/>
        <StackPanel Orientation="Horizontal">
          <Button ToolTip.Tip="Frame Settings" CornerRadius="5,0,0,5">
            <Button.Flyout>
              <Flyout>
                <StackPanel Classes="form">
  	            <TextBlock Classes="formtitle" Text="Frame Settings"/>
                  <Separator Classes="formtitle"/>
                  <ContentControl Content="{Binding FrameRate}"/>
                  <ContentControl Content="{Binding FrameDuration}"/>
                  <Expander Header="In-Editor Playback">
                    <StackPanel Classes="form">
                      <ContentControl Content="{Binding StartingFrameEnabled}"/>
                      <ContentControl Content="{Binding StartingFrameEntry}" IsVisible="{Binding StartingFrameEnabled.Value}"/>
                    </StackPanel>
                  </Expander>
                  <Expander Header="Cinemascope">
                    <StackPanel Classes="form">
                      <ContentControl Content="{Binding CinemascopeEnabled}"/>
                      <ContentControl Content="{Binding CinemascopeAnimationEnabled}" IsVisible="{Binding CinemascopeEnabled.Value}"/>
                      <ContentControl Content="{Binding CinemascopeStartingFrame}" IsVisible="{Binding CinemascopeEnabled.Value}"/>
                    </StackPanel>
                  </Expander>
                </StackPanel>
              </Flyout>
            </Button.Flyout>
            <PathIcon Data="{StaticResource settings_regular}" />
          </Button>
          <Button ToolTip.Tip="Other Settings" CornerRadius="0,5,5,0">
            <Button.Flyout>
              <Flyout>
                <StackPanel Classes="form">
                  <TextBlock Classes="formtitle" Text="Other Settings"/>
                  <Separator Classes="formtitle"/>
                  <Expander Header="Labels">
                    <StackPanel Classes="form">
                      <ContentControl Content="{Binding MajorID}"/>
                      <ContentControl Content="{Binding MinorID}"/>
                      <ContentControl Content="{Binding Rank}"/>
                      <ContentControl Content="{Binding Level}"/>
                    </StackPanel>
                  </Expander>
                  <Expander Header="Environment">
                    <StackPanel Classes="form">
                      <ContentControl Content="{Binding InitEnvAssetID}"/>
                      <ContentControl Content="{Binding DebugEnvAssetID}"/>
                    </StackPanel>
                  </Expander>
                  <Expander Header="Other Flags">
                    <StackPanel Classes="form">
                      <ContentControl Content="{Binding UnkFlag1}"/>
                      <ContentControl Content="{Binding UnkFlag2}"/>
                    </StackPanel>
                  </Expander>
                </StackPanel>
              </Flyout>
            </Button.Flyout>
            <PathIcon Data="{StaticResource more_regular}" />
          </Button>
        </StackPanel>
      </StackPanel>
    </DockPanel>
    <Grid>
      <ScrollViewer Name="FramesScroller" HorizontalScrollBarVisibility="Hidden" VerticalScrollBarVisibility="Disabled" Margin="153,0,16,16" Offset="{Binding $parent[views:TimelinePanel].HPos, Mode=TwoWay}">
        <ItemsControl ItemsSource="{Binding Frames}" Name="FramesHaver">
          <ItemsControl.Styles>
            <Style Selector="ItemsControl > ContentPresenter:nth-child(even) > Border">
              <Setter Property="Background" Value="{DynamicResource SystemControlBackgroundChromeMediumLowBrush}"/>
            </Style>
            <Style Selector="ItemsControl > ContentPresenter:nth-child(odd) > Border">
              <Setter Property="Background" Value="{DynamicResource SystemListLowColor}"/>
            </Style>
            <Style Selector="ItemsControl > ContentPresenter:pointerover > Border">
              <Setter Property="Background" Value="{DynamicResource SystemListMediumColor}"/>
            </Style>
            <Style Selector="ItemsControl > ContentPresenter > Border.marked">
              <Setter Property="Background" Value="{DynamicResource SystemAccentColorTheme1}"/>
            </Style>
            <Style Selector="ItemsControl > ContentPresenter:pointerover > Border.marked">
              <Setter Property="Background" Value="{DynamicResource SystemAccentColorTheme2}"/>
            </Style>
            <Style Selector="ItemsControl > ContentPresenter:pointerover > Border > StackPanel > TextBlock">
              <Setter Property="Foreground" Value="{DynamicResource SystemAccentColor}"/>
            </Style>
          </ItemsControl.Styles>
          <ItemsControl.ItemsPanel>
            <ItemsPanelTemplate>
              <StackPanel Orientation="Horizontal" Spacing="5"/>
            </ItemsPanelTemplate>
          </ItemsControl.ItemsPanel>
        </ItemsControl>
      </ScrollViewer>
      <ScrollViewer Name="CategoriesScroller" HorizontalScrollBarVisibility="Disabled" VerticalScrollBarVisibility="Visible" Margin="0,37,0,16" Offset="{Binding $parent[views:TimelinePanel].VPos, Mode=TwoWay}" AllowAutoHide="false">
        <ItemsControl ItemsSource="{Binding Categories}">
          <ItemsControl.Styles>
            <Style Selector="ItemsControl > ContentPresenter > Border">
              <Setter Property="Background" Value="{DynamicResource SystemListLowColor}"/>
            </Style>
            <Style Selector="ItemsControl > ContentPresenter > Border.hide">
              <Setter Property="Background" Value="{DynamicResource SystemAltLowColor}"/>
            </Style>
            <Style Selector="ItemsControl > ContentPresenter:pointerover > Border">
              <Setter Property="Background" Value="{DynamicResource SystemListMediumColor}"/>
            </Style>
            <Style Selector="ItemsControl > ContentPresenter:pointerover > Border > DockPanel > ToggleButton TextBlock">
              <Setter Property="Foreground" Value="{DynamicResource SystemAccentColor}"/>
            </Style>
          </ItemsControl.Styles>
          <ItemsControl.ItemsPanel>
            <ItemsPanelTemplate>
              <StackPanel Orientation="Vertical" Spacing="5" Margin="0,0,16,0"/>
            </ItemsPanelTemplate>
          </ItemsControl.ItemsPanel>
          <ItemsControl.ItemTemplate>
            <DataTemplate>
              <Border CornerRadius="5,0,0,5"
                 Classes.show="{Binding IsOpen}"
                 Classes.hide="{Binding !IsOpen}">
                <DockPanel MinHeight="40" Height="{c:Binding (IsOpen) ? 60*MaxInOneFrame + 20 : 40}" VerticalAlignment="Center" HorizontalAlignment="Stretch">
                  <ToggleButton IsChecked="{Binding IsOpen}" HorizontalAlignment="Stretch" VerticalAlignment="Stretch" DockPanel.Dock="Left" CornerRadius="0">
                    <ToggleButton.Styles>
                      <Style Selector="ToggleButton">
                        <Setter Property="Background" Value="Transparent"/>
                      </Style>
                      <Style Selector="ToggleButton:checked">
                        <Setter Property="Background" Value="Transparent"/>
                      </Style>
                      <Style Selector="ToggleButton ContentPresenter">
                        <Setter Property="Background" Value="Transparent"/>
                      </Style>
                      <Style Selector="ToggleButton:pointerover ContentPresenter">
                        <Setter Property="Background" Value="Transparent"/>
                      </Style>
                      <Style Selector="ToggleButton:checked ContentPresenter">
                        <Setter Property="Background" Value="Transparent"/>
                      </Style>
                      <Style Selector="ToggleButton PathIcon">
                        <Setter Property="Data" Value="{StaticResource chevron_up_regular}"/>
                        <Setter Property="Foreground" Value="{DynamicResource SystemBaseLowColor}"/>
                      </Style>
                      <Style Selector="ToggleButton:checked PathIcon">
                        <Setter Property="Data" Value="{StaticResource chevron_down_regular}"/>
                        <Setter Property="Foreground" Value="{DynamicResource SystemAccentColor}"/>
                      </Style>
                    </ToggleButton.Styles>
                    <DockPanel>
                      <PathIcon DockPanel.Dock="Left" Margin="5"/>
                      <TextBlock Text="{Binding Name}"
                       FontSize="18"
                       Foreground="{DynamicResource SystemBaseMediumColor}"
                       HorizontalAlignment="Center"
                       TextAlignment="Center"
                       VerticalAlignment="Center"
                       Width="100"/>
                    </DockPanel>
                  </ToggleButton>
                  <Rectangle
                   Fill="{DynamicResource SystemControlPageBackgroundMediumAltMediumBrush}"
                   Width="5"
                   VerticalAlignment="Stretch"/>
                  <Panel DockPanel.Dock="Right" />
                </DockPanel>
              </Border>
            </DataTemplate>
          </ItemsControl.ItemTemplate>
        </ItemsControl>
      </ScrollViewer>
      <ScrollViewer Name="Scrolly" HorizontalScrollBarVisibility="Visible" VerticalScrollBarVisibility="Disabled" Margin="153,37,16,0" Offset="{Binding $parent[views:TimelinePanel].HPos, Mode=TwoWay}" AllowAutoHide="false">
        <ScrollViewer HorizontalScrollBarVisibility="Disabled" VerticalScrollBarVisibility="Hidden" Offset="{Binding $parent[views:TimelinePanel].VPos, Mode=TwoWay}" Margin="0,0,0,16" PointerPressed="LogPosition">
          <ScrollViewer.ContextMenu>
            <ContextMenu IsEnabled="{Binding !$parent[views:TimelinePanel]((vm:TimelinePanelViewModel)DataContext).Config.ReadOnly}">
              <MenuItem Header="New" Click="OpenModal" />
              <MenuItem Header="Paste" Click="PasteCommand" IsEnabled="{Binding $parent[views:TimelinePanel]((vm:TimelinePanelViewModel)DataContext).SharedClipboard.HasCopiedCommand}" />
            </ContextMenu>
          </ScrollViewer.ContextMenu> 
          <ItemsControl ItemsSource="{Binding Categories}" VerticalAlignment="Stretch">
            <ItemsControl.ItemsPanel>
              <ItemsPanelTemplate>
                <StackPanel Orientation="Vertical" Spacing="5"/>
              </ItemsPanelTemplate>
            </ItemsControl.ItemsPanel>
            <ItemsControl.ItemTemplate>
              <DataTemplate>
                <ItemsControl ItemsSource="{Binding Commands}" MinHeight="40"
                 Classes.show="{Binding IsOpen}"
                 Classes.hide="{Binding !IsOpen}">
                  <ItemsControl.ItemsPanel>
                    <ItemsPanelTemplate>
                      <Canvas MinHeight="40" Height="{c:Binding (IsOpen) ? 60*MaxInOneFrame + 20 : 40}" Width="{c:Binding 85*FrameCount - 5}" Classes.open="{Binding IsOpen}" Classes.closed="{Binding !IsOpen}" HorizontalAlignment="Left"/>
                    </ItemsPanelTemplate>
                  </ItemsControl.ItemsPanel>
                  <ItemsControl.Styles>
                    <Style Selector="ContentPresenter"> <!--x:DataType="vm:CommandPointer"-->
                      <Setter Property="Canvas.Left" Value="{c:Binding 85*Frame + 10}"/>
                    </Style>
                    <Style Selector="ItemsControl.show > ContentPresenter">
                      <Setter Property="Canvas.Top" Value="{c:Binding 60*PositionWithinFrame + 10}"/>
                    </Style>
                    <Style Selector="ItemsControl.hide > ContentPresenter">
                      <Setter Property="Canvas.Top" Value="10"/>
                    </Style>
                    <Style Selector="ItemsControl.show > ContentPresenter > Button">
                      <Setter Property="Height" Value="60"/>
                      <Setter Property="IsEnabled" Value="true"/>
                    </Style>
                    <Style Selector="ItemsControl.hide > ContentPresenter > Button">
                      <Setter Property="Height" Value="20"/>
                      <Setter Property="IsEnabled" Value="false"/>
                    </Style>
                    <Style Selector="ItemsControl.show ContentPresenter > Button > TextBlock">
                      <Setter Property="IsVisible" Value="true"/>
                    </Style>
                    <Style Selector="ItemsControl.hide ContentPresenter > Button > TextBlock">
                      <Setter Property="IsVisible" Value="false"/>
                    </Style>
                  </ItemsControl.Styles>
                  <ItemsControl.ItemTemplate>
                    <DataTemplate>
                      <Button Flyout="{StaticResource CommandFlyout}"
                       Classes.inactive="{Binding !IsInPlayRange}"
                       HorizontalAlignment="Center"
                       Width="{c:Binding 60 + 85*(Duration-1)}">
                        <Button.ContextMenu>
                          <ContextMenu>
                            <MenuItem Header="Cut" Click="CutCommand" IsEnabled="{Binding !$parent[views:TimelinePanel]((vm:TimelinePanelViewModel)DataContext).Config.ReadOnly}"/>
                            <MenuItem Header="Copy" Click="CopyCommand"/>
                            <MenuItem Header="Delete" Click="DeleteCommand" IsEnabled="{Binding !$parent[views:TimelinePanel]((vm:TimelinePanelViewModel)DataContext).Config.ReadOnly}"/>
                          </ContextMenu>
                        </Button.ContextMenu> 
                        <TextBlock Text="{Binding Code}"
                         HorizontalAlignment="Left"
                         VerticalAlignment="Center"/>
                      </Button>
                    </DataTemplate>
                  </ItemsControl.ItemTemplate>
                </ItemsControl>
              </DataTemplate>
            </ItemsControl.ItemTemplate>
          </ItemsControl>
        </ScrollViewer>
      </ScrollViewer>
    </Grid>
  </DockPanel>
  <DockPanel Background="{DynamicResource SystemControlPageBackgroundMediumAltMediumBrush}" IsVisible="{Binding $parent[views:TimelinePanel].ModalIsOpen}">
    <Border
     Background="{DynamicResource SystemChromeMediumLowColor}"
     BorderThickness="5"
     CornerRadius="5"
     HorizontalAlignment="Center"
     Padding="10"
     VerticalAlignment="Center">
    <StackPanel
     HorizontalAlignment="Center"
     Spacing="10"
     VerticalAlignment="Center">
      <Button Classes="popupclose" Click="CloseModal" HorizontalAlignment="Right">
        <PathIcon Data="{StaticResource dismiss_regular}" />
      </Button>
      <TextBlock Classes="formtitle" Text="Add New Command"/>
      <Separator Classes="formtitle"/>
      <StackPanel HorizontalAlignment="Center" Orientation="Horizontal" Spacing="5">
      <ComboBox
       HorizontalAlignment="Center"
       ItemsSource="{Binding AddableCodes}"
       SelectedItem="{Binding $parent[views:TimelinePanel].AddCode}"
       IsEnabled="{Binding !Config.ReadOnly}"
       MinWidth="100"
       MaxDropDownHeight="300"/>
      <Button Click="NewCommand"
       HorizontalAlignment="Center"
       IsEnabled="{Binding $parent[views:TimelinePanel].AddCodeIsSelected}">
        Add
      </Button>
      </StackPanel>
    </StackPanel>
    </Border>
  </DockPanel>
</Grid>

</rxui:ReactiveUserControl>
